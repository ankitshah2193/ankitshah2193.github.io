{"version":3,"sources":["components/scoreentry/TeamScore.jsx","containers/TeamScoreContainer.js","components/scoreboard/StatsTable.jsx","containers/BattingTableContainer.js","containers/BowlingTableContainer.js","components/scoreboard/Scoreboard.js","components/scoreentry/CurrentOverDetails.jsx","containers/CurrentOverDetails.js","components/scoreentry/Score.jsx","actions/actionCreator.js","actions/actions.js","middleware/helper.js","containers/ScoreContainer.js","components/scoreentry/CurrentStrikers.jsx","containers/CurrentStrikers.js","components/Popup.js","containers/Popup.js","components/scoreentry/ScoreInputPage.js","components/router.js","App.js","serviceWorker.js","reducers/game.js","reducers/team.js","reducers/rootReducer.js","index.js"],"names":["TeamScore","props","react_default","a","createElement","className","currentBattingTeam","currentBattingTeamScore","currentTeamWickets","currentTeamOver","totalOvers","previousBattingTeam","previousBattingTeamScore","previousBattingTeamWickets","previousTeamOvers","getPreviousTeamScoreTemplate","getCurrentOver","balls","Math","floor","connect","state","game","team","noOfBalls","totalScore","wickets","noOfOvers","StatsTable","this","stats","filter","stat","length","map","value","index","rowDetails","statValue","statIndex","key","headers","tableName","getTableHeaders","getTableStats","React","Component","getPlayerBattingStats","currentPlayerList","players","battingIndex","overs","batsmenIndex","over","i","ball","j","hasOwnProperty","batsman","runs","fours","sixes","isOut","extraType","createBattingStatsIndex","currentBatsmen","name","Object","keys","playerName","playerNameVal","indexOf","undefined","toFixed","getPlayerBowlingStats","currentBowlingTeam","bowlingIndex","runsInOver","bowler","maidens","extras","extraRuns","isExtra","isLegitball","createBowlingStatsIndex","parseInt","Scoreboard","TeamScoreContainer","BattingTableContainer","BowlingTableContainer","Link","to","CurrentOverDetails","currentOverDetails","currentBowler","info","join","getLastOver","Score","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRunDataTemplate","run","toString","onClick","handleRunChange","getExtrasDataTemplate","extra","handleExtraChange","event","target","innerText","setState","handleOutChange","handleNextBallEvent","_this$state","recordRuns","Fragment","actionCreator","type","_len","arguments","argNames","Array","_key","_len2","args","_key2","action","forEach","arg","overComplete","updateTeamScore","updateNoOfBalls","updateOverDetails","changeStriker","recordWicket","setNewBatsman","inningsOver","declareWinner","declareTie","changeBowler","setNewBowler","isValidDelivery","recordRunThunk","dispatch","getState","updatedState","currentTeam","objectSpread","currentBattingTeamName","currentBowlingTeamName","previousBattingTeamName","isStriker","totalWickets","noOfWickets","currentOver","noOfValidBalls","count","getValidNoOfBalls","totalRuns","checkForWinner","winner","CurrentStrikers","strikers","striker","classValue","styles","fontFamily","textAlign","Popup","isNewBatsman","isNewBowler","onCloseModal","open","onBatsmanSelect","displaySelectedPlayer","setNewPlayer","setBatsman","selectedBatsman","setBowler","selectedBowler","batsmen","bowlers","newProps","oldProps","availableBatsmen","availableBowlers","player","bastmen","isAvaialbleForBatting","push","isAvaialbleForBowling","_this2","index_es","closeOnEsc","closeOnOverlayClick","showCloseIcon","onClose","center","style","onChange","e","validationError","ScoreInputPage","containers_CurrentOverDetails","containers_CurrentStrikers","ScoreContainer","containers_Popup","CricketRouter","BrowserRouter","basename","Route","path","exact","component","App","router_CricketRouter","Boolean","window","location","hostname","match","initialState","resetState","swal","text","icon","closeOnClickOutside","button","winningTeam","India","Sehwag","Sachin","Kohli","Dhoni","Singh","Khan","Australia","Hayden","Gilchrist","Ponting","Clark","McGrath","Warne","teamName","deliveryData","bowlingTeam","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kZAUA,IAeeA,EAfG,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,gBAAQH,EAAMK,mBAAd,KACAJ,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,wBAAb,IAAuCN,EAAMO,mBAA7C,OAAqEP,EAAMQ,gBAA3E,IAA6FR,EAAMS,aAGvGR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAhBhC,SAAsCJ,GAClC,OAAIA,EAAMU,oBACCT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAAhB,IAA6CJ,EAAMU,oBAAnD,WAAgFV,EAAMW,yBAAtF,IAAiHX,EAAMY,2BAAvH,OAAuJZ,EAAMa,kBAA7J,WAEJZ,EAAAC,EAAAC,cAAA,aAY8CW,CAA6Bd,cChBtF,SAASe,EAAeC,GACpB,OAAQC,KAAKC,MAAMF,EAAQ,GAAM,IAAOA,EAAQ,EAGpD,IAYeG,cAZS,SAACC,GAAD,MAAY,CAChCf,mBAAoBe,EAAMC,KAAKhB,mBAC/BK,oBAAqBU,EAAMC,KAAKX,oBAChCF,gBAAiBO,EAAeK,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBkB,WAC1EV,kBAAmBO,EAAME,KAAKF,EAAMC,KAAKX,sBAAwBK,EAAeK,EAAME,KAAKF,EAAMC,KAAKX,qBAAqBa,WAC3HjB,wBAAyBc,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBmB,WACnEb,yBAA0BS,EAAME,KAAKF,EAAMC,KAAKX,sBAAwBU,EAAME,KAAKF,EAAMC,KAAKX,qBAAqBc,WACnHjB,mBAAoBa,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBoB,QAC9DhB,WAAYW,EAAMC,KAAKK,UACvBd,2BAA4BQ,EAAME,KAAKF,EAAMC,KAAKX,sBAAwBU,EAAME,KAAKF,EAAMC,KAAKX,qBAAqBe,UAG1GN,CAAyBpB,GCjBnB4B,0LAEb,OAAOC,KAAK5B,MAAM6B,MAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKC,OAAS,IAAGC,IAAI,SAACC,EAAOC,GAChE,IAAIC,EAAaF,EAAMD,IAAI,SAACI,EAAWC,GACnC,OAAOrC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKD,GAAYD,KAEhC,OAAOpC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKJ,GAAQC,+CAK5B,OAAOR,KAAK5B,MAAMwC,QAAQP,IAAI,SAACC,EAAOC,GAClC,OAAOlC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKJ,GAAQD,sCAK5B,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAKyB,KAAK5B,MAAMyC,YAEpBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACKyB,KAAKc,oBAGdzC,EAAAC,EAAAC,cAAA,aACKyB,KAAKe,2BA/BUC,IAAMC,WC8BvC,SAASC,EAAsB1B,GAClC,IAAIf,EAAqBe,EAAMC,KAAKhB,mBAChC0C,EAAoB3B,EAAME,KAAKjB,GAAoB2C,QACnDC,EAhCD,SAAiCC,GACpC,IAAIC,EAAe,GAmBnB,OAlBAD,EAAMjB,IAAI,SAACmB,EAAMC,GACb,OAAOD,EAAKnB,IAAI,SAACqB,EAAMC,GAcnB,OAbKJ,EAAaK,eAAeF,EAAKG,WAClCN,EAAaG,EAAKG,SAAW,CACzBC,KAAM,EACN1C,MAAO,EACP2C,MAAO,EACPC,MAAO,EACPC,OAAO,IAEfV,EAAaG,EAAKG,SAASC,MAAQJ,EAAKI,KACxCP,EAAaG,EAAKG,SAASzC,OAA4B,MAAnBsC,EAAKQ,UAAoB,EAAI,EACjEX,EAAaG,EAAKG,SAASE,OAAuB,IAAdL,EAAKI,KAAa,EAAI,EAC1DP,EAAaG,EAAKG,SAASG,OAAuB,IAAdN,EAAKI,KAAa,EAAI,EAC1DP,EAAaG,EAAKG,SAASI,MAAQP,EAAKO,MACjC,SAGRV,EAYYY,CAAwB3C,EAAME,KAAKjB,GAAoB6C,OAEpEc,EAAkB5C,EAAMC,KAAK2C,eAAe/B,IAAI,SAAAwB,GAAO,OAAIA,EAAQQ,OAEzE,OAAOC,OAAOC,KAAKpB,GAAmBd,IAAI,SAACmC,EAAYjC,GACnD,IAbsBuB,EAAM1C,EAatBqD,EAAiBL,EAAeM,QAAQF,IAAe,EAAIA,EAAW,IAAMA,EAClF,YAAiCG,IAA7BtB,EAAamB,GACN,CAACC,EAAe,EAAG,EAAG,EAAG,EAAG,GAChC,CACHpB,EAAamB,GAAYP,MAAQO,EAAW,QAAUC,EACtDpB,EAAamB,GAAYV,KACzBT,EAAamB,GAAYpD,MACzBiC,EAAamB,GAAYT,MACzBV,EAAamB,GAAYR,OArBPF,EAsBJT,EAAamB,GAAYV,KAtBf1C,EAsBqBiC,EAAamB,GAAYpD,MArBhE,IAAVA,EAAoB,GAChB0C,EAAK1C,EAAM,KAAKwD,QAAQ,OAyBpC,IAQerD,cARS,SAAAC,GACpB,MAAO,CACHqB,UAAW,gBACXZ,MAAOiB,EAAsB1B,GAC7BoB,QAAS,CAAC,UAAW,OAAQ,QAAS,QAAS,QAAS,QAIjDrB,CAAyBQ,GCxBxC,SAAS8C,EAAsBrD,GAC3B,IAAMf,EAAqBe,EAAMC,KAAKhB,mBAChCqE,EAAqBtD,EAAMC,KAAKqD,mBAChC3B,EAAoB3B,EAAME,KAAKoD,GAAoB1B,QACnD2B,EAnCV,SAAiCzB,GAC7B,IAAIyB,EAAe,GAuBnB,OAtBAzB,EAAMjB,IAAI,SAACmB,EAAMC,GACb,IAAIuB,EAAa,EAmBjB,OAlBAxB,EAAKnB,IAAI,SAACqB,EAAMC,GAcZ,OAbKoB,EAAanB,eAAeF,EAAKuB,UAClCF,EAAarB,EAAKuB,QAAU,CACxB7D,MAAO,EACP0C,KAAM,EACNoB,QAAS,EACTrD,QAAS,EACTsD,OAAQ,IAEhBJ,EAAarB,EAAKuB,QAAQnB,MAAQJ,EAAKI,KAAOJ,EAAK0B,UACnDL,EAAarB,EAAKuB,QAAQ7D,OAlBtC,SAAqBsC,GACjB,QAAQA,EAAK2B,WAAY3B,EAAK2B,SAA+B,MAAnB3B,EAAKQ,WAAwC,OAAnBR,EAAKQ,YAiB9BoB,CAAY5B,GAAQ,EAAI,EAC3DqB,EAAarB,EAAKuB,QAAQpD,SAAW6B,EAAKO,MAAQ,EAAI,EACtDc,EAAarB,EAAKuB,QAAQE,SAAUzB,EAAK2B,SAA+B,MAAnB3B,EAAKQ,WAAwC,MAAnBR,EAAKQ,UAAyB,EAAJ,EACzGc,GAActB,EAAKI,KAAOJ,EAAK0B,UACxB1B,IAES,IAAhBF,EAAKpB,SACL2C,EAAavB,EAAK,GAAGyB,QAAQC,SAA0B,IAAfF,EAAmB,EAAI,GAC5DxB,IAEJuB,EAWcQ,CAAwB/D,EAAME,KAAKjB,GAAoB6C,OAC5E,OAAOgB,OAAOC,KAAKpB,GAAmBd,IAAI,SAACmC,EAAYjC,GACnD,YAAiCoC,IAA7BI,EAAaP,GACN,GACJ,CACHA,GAbUpD,EAcG2D,EAAaP,GAAYpD,MAbvCoE,SAASpE,EAAM,GAAK,IAAMA,EAAM,GAc/B2D,EAAaP,GAAYU,QACzBH,EAAaP,GAAYV,KACzBiB,EAAaP,GAAYW,OACzBJ,EAAaP,GAAY3C,SAlBrC,IAAsBT,IAwBtB,IAQeG,cARS,SAAAC,GACpB,MAAO,CACHqB,UAAW,gBACXZ,MAAO4C,EAAsBrD,GAC7BoB,QAAS,CAAC,SAAU,QAAS,UAAW,OAAQ,SAAU,aAInDrB,CAAyBQ,GC3DnB0D,0LAEb,OACIpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACqF,EAAD,MACAvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAG,KAAT,wBAToB9C,IAAMC,4BCqB/B8C,0LAnBP,OACI1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,yBACgByB,KAAK5B,MAAM4F,oBAE3B3F,EAAAC,EAAAC,cAAA,sBACayB,KAAK5B,MAAM6F,uBATPjD,IAAMC,YC4BxB1B,cA/BQ,SAAAC,GAyBnB,MAAO,CACHyE,cAAezE,EAAMC,KAAKwE,cAC1BD,mBA1BJ,WACI,IAAI1C,EAAQ9B,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoB6C,MACtD,OAAOA,EAAMlB,OAAS,EACdkB,EAAMA,EAAMlB,OAAS,GACpBC,IAAI,SAAAqB,GACD,IAAIwC,EAAO,GAcX,OAZiB,IAAdxC,EAAKI,OAAeJ,EAAK2B,SAAW3B,EAAKO,OACzCiC,EAAO,GAENA,GAAQxC,EAAKI,KAGdJ,EAAK2B,UACJa,GAAQxC,EAAKQ,WAEdR,EAAKO,QACJiC,GAAQ,OAELA,IAEVC,KAAK,MAAQ,GAKFC,KAIb7E,CAAwBwE,GCiExBM,qBA3FX,SAAAA,EAAYjG,GAAO,IAAAkG,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAtC,KAAAqE,IACfC,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAAtC,KAAAsC,OAAAmC,EAAA,EAAAnC,CAAA+B,GAAAK,KAAA1E,KAAM5B,KAJV0D,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAGJwC,EAFnBnB,OAAS,CAAC,IAAK,IAAK,IAAK,MAENmB,EAUnBK,mBAAqB,WACjB,OAAOL,EAAKxC,KAAKzB,IAAI,SAAAuE,GAAG,OAAIvG,EAAAC,EAAAC,cAAA,UACAoC,IAAKiE,EACLpG,UAAW,qBAAuB8F,EAAK9E,MAAMsC,OAAS8C,EAAIC,WAAa,cAAgB,aACvFC,QAASR,EAAKS,iBACZH,MAffN,EAkBnBU,sBAAwB,WACpB,OAAOV,EAAKnB,OAAO9C,IAAI,SAAA4E,GAAK,OAAI5G,EAAAC,EAAAC,cAAA,UACAoC,IAAKsE,EACLzG,UAAW,qBAAuB8F,EAAK9E,MAAM0C,YAAc+C,EAAMJ,WAAa,cAAgB,aAC9FC,QAASR,EAAKY,mBACZD,MAvBnBX,EA0BnBS,gBAAkB,SAACI,GACf,IAAMP,EAAMO,EAAMC,OAAOC,UACzBf,EAAKgB,SAAS,CACVxD,KAAMwC,EAAK9E,MAAMsC,OAAS8C,EAAM,KAAOA,KA7B5BN,EAiCnBY,kBAAoB,SAACC,GACjB,IAAMF,EAAQE,EAAMC,OAAOC,UAC3Bf,EAAKgB,SAAS,CACVpD,UAAWoC,EAAK9E,MAAM0C,YAAc+C,EAAQ,KAAOA,EACnD5B,QAASiB,EAAK9E,MAAM0C,YAAc+C,KArCvBX,EAyCnBiB,gBAAkB,WACdjB,EAAKgB,SAAS,CACVrD,OAAQqC,EAAK9E,MAAMyC,SA3CRqC,EA+CnBkB,oBAAsB,WAAM,IAAAC,EACkBnB,EAAK9E,MAAxCsC,EADiB2D,EACjB3D,KAAMuB,EADWoC,EACXpC,QAASpB,EADEwD,EACFxD,MAAOC,EADLuD,EACKvD,UAE7BoC,EAAKgB,SAAS,CACVxD,KAAM,KACNuB,SAAS,EACTpB,OAAO,EACPC,UAAW,OAGfoC,EAAKlG,MAAMsH,WAAW5D,EAAMuB,EAASnB,EAAWD,IAvDhDqC,EAAK9E,MAAQ,CACTsC,KAAM,KACNuB,SAAS,EACTpB,OAAO,EACPC,UAAW,MANAoC,wEA6Df,OACIjG,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACItH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVwB,KAAK2E,sBAGTtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cACCwB,KAAKgF,yBAGT3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,UACAC,UAAW,qBAAuBwB,KAAKR,MAAMyC,MAAQ,cAAgB,aACrE6C,QAAS9E,KAAKuF,iBAFd,QAMFlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACAC,UAAW,eAAiBwB,KAAKR,MAAMsC,MAAQ9B,KAAKR,MAAMyC,OAASjC,KAAKR,MAAM6D,QAAU,cAAgB,0BACxGyB,QAAS9E,KAAKwF,qBAFd,sBApFAxE,IAAMC,oBCJX,SAAS2E,EAAcC,GAAmB,QAAAC,EAAAC,UAAA3F,OAAV4F,EAAU,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAVF,EAAUE,EAAA,GAAAH,UAAAG,GACrD,OAAO,WAAkB,QAAAC,EAAAJ,UAAA3F,OAANgG,EAAM,IAAAH,MAAAE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAN,UAAAM,GACvB,IAAIC,EAAS,CAAET,QAIf,OAHAG,EAASO,QAAQ,SAACC,EAAKjG,GACrB+F,EAAON,EAASzF,IAAU6F,EAAK7F,KAE1B+F,GCJN,IAAMG,EAAeb,EAAc,gBAAiB,YAE9Cc,EAAkBd,EAAc,oBAAqB,WAAY,aAEjEe,EAAkBf,EAAc,qBAAsB,YAEtDgB,EAAoBhB,EAAc,sBAAuB,WAAY,eAAgB,eAErFiB,EAAgBjB,EAAc,kBAE9BkB,EAAelB,EAAc,gBAAiB,WAAY,WAE1DmB,EAAgBnB,EAAc,kBAAmB,WAEjDoB,EAAcpB,EAAc,gBAE5BqB,EAAiBrB,EAAc,iBAAkB,eAEjDsB,EAActB,EAAc,eAE5BuB,EAAevB,EAAc,gBAAiB,cAAe,iBAE7DwB,EAAexB,EAAc,iBAAkB,UCR5D,SAASyB,EAAgBhE,EAASnB,GAC9B,OAAQmB,GAAYA,IAA0B,OAAdnB,GAAoC,MAAdA,GAInD,SAASoF,EAAexF,EAAMuB,EAASnB,EAAWD,GACrD,OAAO,SAAUsF,EAAUC,GACvB,IAAMC,EAAeD,IACjBE,EAAWpF,OAAAqF,EAAA,EAAArF,CAAA,GAAQmF,EAAa/H,KAAK+H,EAAahI,KAAKhB,qBACvDmJ,EAAyBH,EAAahI,KAAKhB,mBAC3CoJ,EAAyBJ,EAAahI,KAAKqD,mBAC3CgF,EAA0BL,EAAahI,KAAKX,oBAC5C+C,EAAU4F,EAAahI,KAAK2C,eAAelC,OAAO,SAAA2B,GAAO,OAAIA,EAAQkG,YAAW,GAAG1F,KACnFY,EAASwE,EAAahI,KAAKwE,cAC3Bb,GAAYC,GAA0B,MAAdnB,GAAmC,MAAdA,EAAyB,EAAJ,EAClE0C,EAAM9C,EAAO0B,SAAS1B,EAAM,IAAM,EAClCkG,EAAeP,EAAahI,KAAKwI,YAEjCC,EAAcR,EAAYpG,MAAMlB,OAAS,EACzC+H,EAAiBT,EAAYpG,MAAM4G,GAAa9H,OAAS,EA9BrE,SAA2BoB,GACvB,IAAI4G,EAAQ,EAOZ,OANA5G,EAAK+E,QAAQ,SAAA7E,GACL2F,EAAgB3F,EAAK2B,QAAS3B,EAAKQ,YACnCkG,MAIDA,EAsB8DC,CAAkBX,EAAYpG,MAAM4G,IAAgB,EAE/GI,EAAY1D,EAAMxB,EAqBxB,IAnBAmE,EAASb,EAAgBkB,EAAwBU,IAE7CjB,EAAgBhE,EAASnB,KACzBqF,EAASZ,EAAgBiB,IACzBO,GAAkB,GAatBZ,EAASX,EAAkBgB,EAVN,CACjB/F,QAASA,EACToB,OAAQA,EACRI,QAASA,EACTpB,MAAOA,EACPmB,UAAWA,EACXtB,KAAM8C,EACN1C,UAAWA,GAGkDgG,IAE7DJ,IAC4BL,EAAa/H,KAAKoI,GACPlI,WAAc8H,EAAY9H,WAAa0I,EAG1E,YADAf,EAASN,EAAcW,IAS/B,GAJI9F,EAAO,EAAI,GACXyF,EAASV,KAGU,IAAnBsB,EACA,GAAIT,EAAYpG,MAAMlB,SAAWqH,EAAahI,KAAKK,UAAW,CAC1D,GAAIgI,EAEA,YADAS,EAAeb,EAAaD,EAAcG,EAAwBE,EAAyBP,EAAUe,GAGrGf,EAASP,UAGbO,EAASd,EAAamB,IACtBL,EAASV,KACTU,EAASJ,EAAaU,EAAwB5E,IAItD,GAAIhB,EACA,GAAIyF,EAAY7H,QAAU,IAAMmI,EAAc,CAC1C,GAAIF,EAEA,YADAS,EAAeb,EAAaD,EAAcG,EAAwBE,EAAyBP,EAAUe,GAGrGf,EAASP,UAGbO,EAAST,EAAac,EAAwB/F,KAK1D,SAAS0G,EAAeb,EAAaD,EAAcG,EAAwBE,EAAyBP,EAAUe,GAC1G,GAAKZ,EAAY9H,WAAa0I,IAAeb,EAAa/H,KAAKoI,GAAyBlI,WACpF2H,EAASL,SAER,CACD,IAAIsB,EAAUd,EAAY9H,WAAa0I,EAAab,EAAa/H,KAAKoI,GAAyBlI,WACzFgI,EAAyBE,EAC/BP,EAASN,EAAcuB,MCvGnC,IAQejJ,cAAQ,KARI,SAACgI,GACxB,MAAO,CACH7B,WADG,SACQ5D,EAAMuB,EAASnB,EAAWD,GACjCsF,EAASD,EAAexF,EAAMuB,EAASnB,EAAWD,OAK/C1C,CAAkC8E,SCalCoE,MAbf,SAAyBrK,GACrB,OACQC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACEJ,EAAMsK,SAbnBrI,IAAI,SAACsI,EAASpI,GAC1B,IAAMqI,EAAaD,EAAQZ,UAAY,kBAAoB,oBAC3D,OAAO1J,EAAAC,EAAAC,cAAA,OAAKoC,IAAKJ,EAAO/B,UAAWoK,GAAaD,EAAQtG,WCAjD9C,cAJS,SAACC,GAAD,MAAY,CAChCkJ,SAAWlJ,EAAMC,KAAK2C,iBAGX7C,CAAyBkJ,mBCHlCI,SAAS,CACbC,WAAY,aACZC,UAAW,WAmIEC,cA5Hb,SAAAA,EAAY5K,GAAO,IAAAkG,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAAtC,KAAAgJ,IACjB1E,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAAtC,KAAAsC,OAAAmC,EAAA,EAAAnC,CAAA0G,GAAAtE,KAAA1E,KAAM5B,KAJR6K,cAAe,EAGI3E,EAFnB4E,aAAc,EAEK5E,EAoDnB6E,aAAe,WACb7E,EAAKgB,SAAS,CAAE8D,MAAM,KArDL9E,EAwDnB+E,gBAAkB,WAChB/E,EAAKgB,SAAS,CAAEgE,uBAAuB,KAzDtBhF,EA4DnBiF,aAAe,WACTjF,EAAK2E,cAAgB3E,EAAK4E,aAC5B5E,EAAKlG,MAAMoL,WAAWlF,EAAK9E,MAAMiK,iBACjCnF,EAAKlG,MAAMsL,UAAUpF,EAAK9E,MAAMmK,iBACvBrF,EAAK4E,YACd5E,EAAKlG,MAAMsL,UAAUpF,EAAK9E,MAAMmK,gBACvBrF,EAAK2E,cACd3E,EAAKlG,MAAMoL,WAAWlF,EAAK9E,MAAMiK,iBAGnCnF,EAAK2E,cAAe,EACpB3E,EAAK4E,aAAc,EACnB5E,EAAKgB,SAAS,CAAE8D,MAAM,KAtEtB9E,EAAK9E,MAAQ,CACX4J,MAAM,EACNE,uBAAuB,EACvBM,QAAS,GACTC,QAAS,GACTJ,gBAAiB,GACjBE,eAAgB,IARDrF,yFAYOwF,EAAUC,GAClC,IAAIH,EACFC,EACAG,EAAmB,GACnBC,EAAmB,GAYrB,IAAK,IAAIC,KAVLJ,EAASjK,QAAUG,KAAK5B,MAAMyB,UAChCG,KAAKiJ,cAAe,EACpBW,EAAOtH,OAAAqF,EAAA,EAAArF,CAAA,GAAQwH,EAASK,UAGtBL,EAASxI,MAAQtB,KAAK5B,MAAMkD,QAC9BtB,KAAKkJ,aAAc,EACnBW,EAAOvH,OAAAqF,EAAA,EAAArF,CAAA,GAAQwH,EAASD,UAGPD,EACbA,EAAQM,GAAQE,uBAClBJ,EAAiBK,KAAKH,GAI1B,IAAK,IAAIA,KAAUL,EACbA,EAAQK,GAAQI,uBAClBL,EAAiBI,KAAKH,IAItBD,EAAiB7J,OAAS,GAAK4J,EAAiB5J,OAAS,IAC3DJ,KAAKsF,SAAS,CACZsE,QAASI,EACTH,QAASI,EACTb,MAAM,EACNK,gBAAiBO,GAAoBA,EAAiB,GACtDL,eAAgBM,GAAoBA,EAAiB,sCA6BlD,IAAAM,EAAAvK,KACCoJ,EAASpJ,KAAKR,MAAd4J,KACR,OACE/K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAOhM,UAAU,eAAeiM,YAAY,EAAOC,qBAAqB,EAAOC,eAAe,EAAOvB,KAAMA,EAAMwB,QAAS5K,KAAKmJ,aAAc0B,QAAM,GAEjJxM,EAAAC,EAAAC,cAAA,OAAKC,UAAYwB,KAAKiJ,aAAe,OAAS,QAC5C5K,EAAAC,EAAAC,cAAA,MAAIuM,MAAOjC,GAAS7I,KAAKiJ,cAAgB,kBACzC5K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAChB8B,MAAON,KAAKR,MAAMiK,gBAClBsB,SACE,SAACC,GAAD,OAAOT,EAAKjF,SAAS,CACnBmE,gBAAiBuB,EAAE5F,OAAO9E,MAAO2K,gBAAoC,KAAnBD,EAAE5F,OAAO9E,MACzD,sCAAwC,OAE7CN,KAAKR,MAAMoK,QAAQvJ,IAAI,SAAC6J,GAAD,OAAY7L,EAAAC,EAAAC,cAAA,UAAQoC,IAAKuJ,EAAQ5J,MAAO4J,GAASA,OAG7E7L,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAYwB,KAAKkJ,YAAc,OAAS,QAC3C7K,EAAAC,EAAAC,cAAA,MAAIuM,MAAOjC,GAAS7I,KAAKkJ,aAAe,iBACxC7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAChB8B,MAAON,KAAKR,MAAMmK,eAClBoB,SACE,SAACC,GAAD,OAAOT,EAAKjF,SAAS,CACnBqE,eAAgBqB,EAAE5F,OAAO9E,MAAO2K,gBAAoC,KAAnBD,EAAE5F,OAAO9E,MACxD,sCAAwC,OAE7CN,KAAKR,MAAMqK,QAAQxJ,IAAI,SAAC6J,GAAD,OAAY7L,EAAAC,EAAAC,cAAA,UAAQoC,IAAKuJ,EAAQ5J,MAAO4J,GAASA,OAI7E7L,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQuG,QAAS9E,KAAKuJ,aAAc/K,UAAU,mBAA9C,oBAvHQwC,IAAMC,WCYX1B,cAlBS,SAACC,GAAD,MAAY,CAChC2K,QAAS3K,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoB2C,QACnDvB,QAASL,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBoB,QACnDyB,MAAO9B,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoB6C,MAAMlB,OACvDyJ,QAASrK,EAAME,KAAKF,EAAMC,KAAKqD,oBAAoB1B,UAG5B,SAACmG,GACxB,MAAO,CACHiC,WADG,SACQhH,GACP+E,EAASR,EAAcvE,KAE3BkH,UAJG,SAIOlH,GACN+E,EAASH,EAAa5E,OAKnBjD,CAA6CyJ,GCdvCkC,mLAGjB,OACE7M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAAC4M,EAAD,MACA9M,EAAAC,EAAAC,cAAC6M,EAAD,MACA/M,EAAAC,EAAAC,cAAC8M,EAAD,MACAhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAG,eAAT,eAEFzF,EAAAC,EAAAC,cAAC+M,EAAD,cAZoCtK,IAAMC,WCH7BsK,mLAEb,OACIlN,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CAAQC,SAAS,aACbpN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmN,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWX,IACjC7M,EAAAC,EAAAC,cAACmN,EAAA,EAAD,CAAOC,KAAK,cAAcE,UAAWpI,aANdzC,IAAMC,WCQlC6K,mLANX,OACEzN,EAAAC,EAAAC,cAACwN,EAAD,aAJY9K,aCQE+K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4FChBAC,GAAe,CACjB5N,mBAAoB,QACpBK,oBAAqB,KACrBgE,mBAAoB,YACpBV,eAAgB,CACZ,CAAEC,KAAM,SAAU0F,WAAW,GAC7B,CAAE1F,KAAM,SAAU0F,WAAW,IAEjC9D,cAAe,UACfnE,UAAW,EACXmI,YAAa,GAGXqE,GAAa,CACf7N,mBAAoB,QACpBK,oBAAqB,KACrBgE,mBAAoB,YACpBV,eAAgB,CACZ,CAAEC,KAAM,SAAU0F,WAAW,GAC7B,CAAE1F,KAAM,SAAU0F,WAAW,IAEjC9D,cAAe,UACfnE,UAAW,EACXmI,YAAa,GAyEFxI,GAtEF,WAAkC,IAAjCD,EAAiCuG,UAAA3F,OAAA,QAAAuC,IAAAoD,UAAA,GAAAA,UAAA,GAAzBsG,GAAc/F,EAAWP,UAAA3F,OAAA,EAAA2F,UAAA,QAAApD,EAC3C,OAAQ2D,EAAOT,MACX,IAAK,iBACD,OAAOvD,OAAAqF,EAAA,EAAArF,CAAA,GACA9C,EADP,CAEI4C,eAAgB5C,EAAM4C,eAAe/B,IAAI,SAAAwB,GACrC,OAAOS,OAAAqF,EAAA,EAAArF,CAAA,GACAT,EADP,CAEIkG,WAAYlG,EAAQkG,gBAIpC,IAAK,kBACD,OAAOzF,OAAAqF,EAAA,EAAArF,CAAA,GACA9C,EADP,CAEI4C,eAAgB5C,EAAM4C,eAAe/B,IAAI,SAAAwB,GAIrC,OAHIA,EAAQkG,YACRlG,EAAQQ,KAAOiE,EAAOzE,SAEnBA,MAGnB,IAAK,iBACD,OAAOS,OAAAqF,EAAA,EAAArF,CAAA,GACA9C,EADP,CAEIyE,cAAeqC,EAAOrD,SAE9B,IAAK,eAOD,OANAsJ,KAAK,CACDC,KAAM,mCACNC,KAAM,UACNC,qBAAqB,EACrBC,OAAQ,qBAELrK,OAAAqF,EAAA,EAAArF,CAAA,GACA9C,EADP,CAEIf,mBAAoB,YACpBK,oBAAqB,QACrBgE,mBAAoB,QACpBmB,cAAe,OACf7B,eAAgB,CACZ,CAAEC,KAAM,YAAa0F,WAAW,GAChC,CAAE1F,KAAM,SAAU0F,WAAW,MAGzC,IAAK,iBAOD,OANAwE,KAAK,CACDC,KAAM,oBAAsBlG,EAAOsG,YAAc,6BACjDH,KAAM,UACNC,qBAAqB,EACrBC,OAAQ,mBAELL,GAEX,IAAK,cAOD,OANAC,KAAK,CACDC,KAAM,sBACNC,KAAM,UACNC,qBAAqB,EACrBC,OAAQ,mBAELL,GAMf,OAAO9M,GC/FL6M,GAAe,CACjBQ,MAAO,CACHjN,WAAY,EACZD,UAAW,EACXE,QAAS,EACTuB,QAAS,CACL0L,OAAQ,CACJ1C,uBAAuB,EACvBE,uBAAuB,GAE3ByC,OAAQ,CACJ3C,uBAAuB,EACvBE,uBAAuB,GAE3B0C,MAAO,CACH5C,uBAAuB,EACvBE,uBAAuB,GAE3B2C,MAAO,CACH7C,uBAAuB,EACvBE,uBAAuB,GAE3B4C,MAAO,CACH9C,uBAAuB,EACvBE,uBAAuB,GAE3B6C,KAAM,CACF/C,uBAAuB,EACvBE,uBAAuB,IAG/BhJ,MAAO,CACH,KAGR8L,UAAW,CACPxN,WAAY,EACZD,UAAW,EACXE,QAAS,EACTuB,QAAS,CACLiM,OAAQ,CACJjD,uBAAuB,EACvBE,uBAAuB,GAE3BgD,UAAW,CACPlD,uBAAuB,EACvBE,uBAAuB,GAE3BiD,QAAS,CACLnD,uBAAuB,EACvBE,uBAAuB,GAE3BkD,MAAO,CACHpD,uBAAuB,EACvBE,uBAAuB,GAE3BmD,QAAS,CACLrD,uBAAuB,EACvBE,uBAAuB,GAE3BoD,MAAO,CACHtD,uBAAuB,EACvBE,uBAAuB,IAG/BhJ,MAAO,CACH,MAKNgL,GAAa,CACfO,MAAO,CACHjN,WAAY,EACZD,UAAW,EACXE,QAAS,EACTuB,QAAS,CACL0L,OAAQ,CACJ1C,uBAAuB,EACvBE,uBAAuB,GAE3ByC,OAAQ,CACJ3C,uBAAuB,EACvBE,uBAAuB,GAE3B0C,MAAO,CACH5C,uBAAuB,EACvBE,uBAAuB,GAE3B2C,MAAO,CACH7C,uBAAuB,EACvBE,uBAAuB,GAE3B4C,MAAO,CACH9C,uBAAuB,EACvBE,uBAAuB,GAE3B6C,KAAM,CACF/C,uBAAuB,EACvBE,uBAAuB,IAG/BhJ,MAAO,CACH,KAGR8L,UAAW,CACPxN,WAAY,EACZD,UAAW,EACXE,QAAS,EACTuB,QAAS,CACLiM,OAAQ,CACJjD,uBAAuB,EACvBE,uBAAuB,GAE3BgD,UAAW,CACPlD,uBAAuB,EACvBE,uBAAuB,GAE3BiD,QAAS,CACLnD,uBAAuB,EACvBE,uBAAuB,GAE3BkD,MAAO,CACHpD,uBAAuB,EACvBE,uBAAuB,GAE3BmD,QAAS,CACLrD,uBAAuB,EACvBE,uBAAuB,GAE3BoD,MAAO,CACHtD,uBAAuB,EACvBE,uBAAuB,IAG/BhJ,MAAO,CACH,MAuCG5B,GAjCF,WAAkC,IAAjCF,EAAiCuG,UAAA3F,OAAA,QAAAuC,IAAAoD,UAAA,GAAAA,UAAA,GAAzBsG,GAAc/F,EAAWP,UAAA3F,OAAA,EAAA2F,UAAA,QAAApD,EACrC8E,EAAYnF,OAAAqF,EAAA,EAAArF,CAAA,GAAQ9C,GAE1B,OAAQ8G,EAAOT,MACX,IAAK,oBAED,OADA4B,EAAanB,EAAOqH,UAAU/N,YAAc0G,EAAOgC,UAC5Cb,EACX,IAAK,qBAED,OADAA,EAAanB,EAAOqH,UAAUhO,WAAa,EACpC8H,EACX,IAAK,sBAED,OADAA,EAAanB,EAAOqH,UAAUrM,MAAMgF,EAAO4B,aAAamC,KAAK/D,EAAOsH,cAC7DnG,EACX,IAAK,gBAED,OADAA,EAAanB,EAAOqH,UAAUrM,MAAM+I,KAAK,IAClC5C,EACX,IAAK,gBAGD,OAFAA,EAAanB,EAAOqH,UAAUvM,QAAQkF,EAAOzE,SAASuI,uBAAwB,EAC9E3C,EAAanB,EAAOqH,UAAU9N,SAAW,EAClC4H,EACX,IAAK,gBAGD,OAFAnF,OAAOC,KAAKkF,EAAanB,EAAOuH,aAAazM,SAASmF,QAAQ,SAAS5F,GAAM8G,EAAanB,EAAOuH,aAAazM,QAAQT,GAAzC,uBAAyE,IACtJ8G,EAAanB,EAAOuH,aAAazM,QAAQkF,EAAOrC,eAAeqG,uBAAwB,EAChF7C,EACX,IAAK,cACL,IAAK,iBACD,OAAO6E,GAIf,OAAO7E,GCpKIqG,GALKC,aAAgB,CAChCtO,QACAC,mBCMEsO,GAAQC,aAAYH,GAAa,GAAKI,aACxCC,aAAgBC,MACfnC,OAAOoC,sCAAwCpC,OAAOoC,wCAA2CH,OAGtGI,IAASC,OACLlQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAUR,MAAOA,IACb3P,EAAAC,EAAAC,cAACkQ,EAAD,OAEHC,SAASC,eAAe,SJ4GvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.90729d70.chunk.js","sourcesContent":["import React from 'react'\nimport '../../styles/team-score.css'\n\nfunction getPreviousTeamScoreTemplate(props) {\n    if (props.previousBattingTeam) {\n        return <span className=\"previousBattingTeamScore\"> {props.previousBattingTeam} scored {props.previousBattingTeamScore}/{props.previousBattingTeamWickets} in {props.previousTeamOvers} overs </span>;\n    }\n    return <span></span>;\n}\n\nconst TeamScore = (props) => {\n    return (\n        <div>\n            <div className=\"current-team-summary\">\n                <span> {props.currentBattingTeam} </span>\n                <span>{props.currentBattingTeamScore}/{props.currentTeamWickets} in {props.currentTeamOver}/{props.totalOvers}</span>\n            </div>\n\n            <div>\n                <span className=\"previous-team-summary\">{getPreviousTeamScoreTemplate(props)}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TeamScore;\n\n\n","import TeamScore from '../components/scoreentry/TeamScore';\nimport { connect } from 'react-redux';\n\nfunction getCurrentOver(balls) {\n    return (Math.floor(balls / 6)) + '.' + (balls % 6);\n}\n\nconst mapStateToProps = (state) => ({\n    currentBattingTeam: state.game.currentBattingTeam,\n    previousBattingTeam: state.game.previousBattingTeam,\n    currentTeamOver: getCurrentOver(state.team[state.game.currentBattingTeam].noOfBalls),\n    previousTeamOvers: state.team[state.game.previousBattingTeam] && getCurrentOver(state.team[state.game.previousBattingTeam].noOfBalls),\n    currentBattingTeamScore: state.team[state.game.currentBattingTeam].totalScore,\n    previousBattingTeamScore: state.team[state.game.previousBattingTeam] && state.team[state.game.previousBattingTeam].totalScore,\n    currentTeamWickets: state.team[state.game.currentBattingTeam].wickets,\n    totalOvers: state.game.noOfOvers,\n    previousBattingTeamWickets: state.team[state.game.previousBattingTeam] && state.team[state.game.previousBattingTeam].wickets\n});\n\nexport default connect(mapStateToProps)(TeamScore);","import React from 'react';\n\nexport default class StatsTable extends React.Component {\n    getTableStats() {\n        return this.props.stats.filter(stat => stat.length > 0).map((value, index)=>{\n            let rowDetails = value.map((statValue, statIndex)=>{\n                return <td key={statIndex}>{statValue}</td>\n            });\n            return <tr key={index}>{rowDetails}</tr>;\n        });\n    }\n\n    getTableHeaders() {\n        return this.props.headers.map((value, index)=>{\n            return <th key={index}>{value}</th>;\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"panel\">\n                <br/>\n                <div className=\"panel-header\">\n                    <h5>{this.props.tableName}</h5>\n                </div>\n                <div className=\"panel-body\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {this.getTableHeaders()}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.getTableStats()}\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n}","import {connect} from 'react-redux';\nimport StatsTable from '../components/scoreboard/StatsTable';\n\nexport function createBattingStatsIndex(overs) {\n    let batsmenIndex = {};\n    overs.map((over, i)=>{\n        return over.map((ball, j)=>{\n            if (!batsmenIndex.hasOwnProperty(ball.batsman))\n                batsmenIndex[ball.batsman] = {\n                    runs: 0,\n                    balls: 0,\n                    fours: 0,\n                    sixes: 0,\n                    isOut: false\n                }\n            batsmenIndex[ball.batsman].runs += ball.runs;\n            batsmenIndex[ball.batsman].balls += ball.extraType === 'W' ? 0 : 1;\n            batsmenIndex[ball.batsman].fours += ball.runs === 4 ? 1 : 0;\n            batsmenIndex[ball.batsman].sixes += ball.runs === 6 ? 1 : 0;\n            batsmenIndex[ball.batsman].isOut = ball.isOut;\n            return null;\n        })\n    });\n    return batsmenIndex;\n}\n\n\nexport function getStrikeRate(runs, balls) {\n    if (balls === 0) return 0;\n    return (runs/balls*100).toFixed(2);\n}\n\nexport function getPlayerBattingStats(state) {\n    let currentBattingTeam = state.game.currentBattingTeam;\n    let currentPlayerList = state.team[currentBattingTeam].players;\n    let battingIndex = createBattingStatsIndex(state.team[currentBattingTeam].overs);\n\n    const currentBatsmen =  state.game.currentBatsmen.map(batsman => batsman.name);\n    \n    return Object.keys(currentPlayerList).map((playerName, index)=>{\n        const playerNameVal =  currentBatsmen.indexOf(playerName) > -1 ? playerName+'*' : playerName;\n        if (battingIndex[playerName] === undefined)\n            return [playerNameVal, 0, 0, 0, 0, 0];\n        return [\n            battingIndex[playerName].isOut ? playerName+'(out)' : playerNameVal,\n            battingIndex[playerName].runs,\n            battingIndex[playerName].balls,\n            battingIndex[playerName].fours,\n            battingIndex[playerName].sixes,\n            getStrikeRate(battingIndex[playerName].runs, battingIndex[playerName].balls)\n        ]\n    })\n}\n\nconst mapStateToProps = state => {\n    return {\n        tableName: \"Batting Table\",\n        stats: getPlayerBattingStats(state),\n        headers: ['Batsman', 'Runs', 'Balls', 'Fours', 'Sixes', 'SR']\n    }\n}\n\nexport default connect(mapStateToProps)(StatsTable);","import StatsTable from '../components/scoreboard/StatsTable'\nimport {connect} from 'react-redux';\n\nfunction isLegitball(ball) {\n    return !ball.isExtra || (ball.isExtra && (ball.extraType === 'B' || ball.extraType === 'Lb')) ? true : false;\n}\n\nfunction createBowlingStatsIndex(overs) {\n    let bowlingIndex = {};\n    overs.map((over, i) => {\n        let runsInOver = 0;\n        over.map((ball, j)=>{\n            if (!bowlingIndex.hasOwnProperty(ball.bowler))\n                bowlingIndex[ball.bowler] = {\n                    balls: 0,\n                    runs: 0,\n                    maidens: 0,\n                    wickets: 0,\n                    extras: 0\n                }\n            bowlingIndex[ball.bowler].runs += ball.runs + ball.extraRuns;\n            bowlingIndex[ball.bowler].balls += isLegitball(ball) ? 1 : 0;\n            bowlingIndex[ball.bowler].wickets += ball.isOut ? 1 : 0;\n            bowlingIndex[ball.bowler].extras += ball.isExtra && (ball.extraType === 'W' || ball.extraType === 'N') ? 1 : 0;\n            runsInOver += ball.runs + ball.extraRuns;\n            return ball;\n        });\n        if (over.length !== 0)\n            bowlingIndex[over[0].bowler].maidens += runsInOver === 0 ? 1 : 0;\n        return over;\n    });\n    return bowlingIndex;\n}\n\nfunction computeOvers(balls) {\n    return parseInt(balls/6) + \".\" + balls%6;\n}\n\nfunction getPlayerBowlingStats(state) {\n    const currentBattingTeam = state.game.currentBattingTeam;\n    const currentBowlingTeam = state.game.currentBowlingTeam;\n    const currentPlayerList = state.team[currentBowlingTeam].players;\n    const bowlingIndex = createBowlingStatsIndex(state.team[currentBattingTeam].overs);\n    return Object.keys(currentPlayerList).map((playerName, index)=>{\n        if (bowlingIndex[playerName] === undefined)\n            return [];\n        return [\n            playerName,\n            computeOvers(bowlingIndex[playerName].balls),\n            bowlingIndex[playerName].maidens,\n            bowlingIndex[playerName].runs,\n            bowlingIndex[playerName].extras,\n            bowlingIndex[playerName].wickets            \n        ]\n    })\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        tableName: \"Bowling Table\",\n        stats: getPlayerBowlingStats(state),\n        headers: ['Bowler', 'Overs', 'Maidens', 'Runs', 'Extras', 'Wickets']\n    }\n}\n\nexport default connect(mapStateToProps)(StatsTable);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport TeamScoreContainer from '../../containers/TeamScoreContainer';\nimport BattingTableContainer from '../../containers/BattingTableContainer';\nimport BowlingTableContainer from '../../containers/BowlingTableContainer';\nimport '../../styles/scoreBoard.css';\n\nexport default class Scoreboard extends React.Component {\n    render() {\n        return (\n            <div className=\"app-container\">\n               \n                <TeamScoreContainer/>\n                <BattingTableContainer />\n                <BowlingTableContainer />\n                <div className=\"scoreentry-link-container\">\n                    <Link to=\"/\">Score Entry</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../styles/currentOverDetails.css';\n\nimport PropTypes from 'prop-types';\n\nclass CurrentOverDetails extends React.Component{\n    \n    render(){\n        return (\n            <div className=\"current-over-container\">\n                <div>\n                    This Over: {this.props.currentOverDetails}\n                </div>\n                <div>\n                    Bowler: {this.props.currentBowler}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nCurrentOverDetails.propTypes = {\n    currentBowler : PropTypes.string,\n    currentOverDetails : PropTypes.string\n}\n\nexport default CurrentOverDetails;\n\n","import {connect} from 'react-redux';\nimport CurrentOverDetails from '../components/scoreentry/CurrentOverDetails';\n\nconst mapStateToProp = state =>{\n    function getLastOver() {\n        let overs = state.team[state.game.currentBattingTeam].overs;\n        return overs.length > 0 ? \n                overs[overs.length - 1]\n                .map(ball => {\n                    let info = '';\n                    \n                    if(ball.runs === 0 && (ball.isExtra || ball.isOut)) {\n                       info = '';\n                    } else {\n                        info += ball.runs;\n                    }\n                   \n                    if(ball.isExtra) {\n                        info += ball.extraType;\n                    } \n                    if(ball.isOut) {\n                        info += 'Out';\n                    }   \n                    return info;\n                })\n                .join('  ') : '';\n    }\n    \n    return {\n        currentBowler: state.game.currentBowler,\n        currentOverDetails: getLastOver()\n    }\n}\n\nexport default connect(mapStateToProp)(CurrentOverDetails);\n","import React from 'react';\nimport '../../styles/score.css';\nimport propTypes from 'prop-types';\n\nclass Score extends React.Component {\n    runs = [0, 1, 2, 3, 4, 6];\n    extras = ['W', 'N', 'B', 'Lb'];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        }\n    }\n\n    getRunDataTemplate = () => {\n        return this.runs.map(run => <button \n                                    key={run} \n                                    className={'score-button btn ' + (this.state.runs === run.toString() ? 'btn-primary' : 'btn-light')}\n                                    onClick={this.handleRunChange}\n                                    >{run}</button>)\n    }\n\n    getExtrasDataTemplate = () => {\n        return this.extras.map(extra => <button \n                                        key={extra} \n                                        className={'score-button btn ' + (this.state.extraType === extra.toString() ? 'btn-primary' : 'btn-light')}\n                                        onClick={this.handleExtraChange}\n                                        >{extra}</button>)\n    }\n\n    handleRunChange = (event) => {\n        const run = event.target.innerText;\n        this.setState({\n            runs: this.state.runs === run ? null : run\n        });\n    }\n\n    handleExtraChange = (event) => {\n        const extra = event.target.innerText;\n        this.setState({\n            extraType: this.state.extraType === extra ? null : extra,\n            isExtra: this.state.extraType === extra ? false : true\n        });\n    }\n\n    handleOutChange = () => {\n        this.setState({\n            isOut: !this.state.isOut\n        });\n    }\n    \n    handleNextBallEvent = () => {\n        const {runs, isExtra, isOut, extraType} = this.state;\n\n        this.setState({\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        });\n\n        this.props.recordRuns(runs, isExtra, extraType, isOut);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"runs-container\">\n                    {this.getRunDataTemplate()}\n                </div>\n\n                 <div className=\"extra-runs-container\">\n                    <span className=\"extra-label\">Extras&nbsp;</span>\n                    {this.getExtrasDataTemplate()}\n                 </div>\n\n                 <div className=\"out-container\">\n                    <button \n                    className={'score-button btn ' + (this.state.isOut ? 'btn-primary' : 'btn-light')}\n                    onClick={this.handleOutChange}\n                    >Out</button>\n                 </div>\n\n                  <div className=\"next-ball-container\">\n                    <button \n                    className={'btn btn-lg ' + (this.state.runs || this.state.isOut || this.state.isExtra ? 'btn-primary' : 'btn-secondary disabled')}\n                    onClick={this.handleNextBallEvent}\n                    >Next Ball</button>\n                 </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Score;\n\nScore.propTypes = {\n    recordRuns: propTypes.func\n}","export default function actionCreator(type, ...argNames) {\n    return function(...args) {\n      let action = { type };\n      argNames.forEach((arg, index) => {\n        action[argNames[index]] = args[index];\n      });\n      return action;\n    };\n  }","import actionCreator from \"./actionCreator\";\n\nexport const overComplete = actionCreator('OVER_COMPLETE', 'teamName');\n\nexport const updateTeamScore = actionCreator('UPDATE_TEAM_SCORE', 'teamName', 'totalRuns');\n\nexport const updateNoOfBalls = actionCreator('UPDATE_NO_OF_BALLS', 'teamName');\n\nexport const updateOverDetails = actionCreator('UPDATE_OVER_DETAILS', 'teamName', 'deliveryData', 'currentOver');\n\nexport const changeStriker = actionCreator('CHANGE_STRIKER');\n\nexport const recordWicket = actionCreator('UPDATE_WICKET', 'teamName', 'batsman');\n\nexport const setNewBatsman = actionCreator('SET_NEW_BATSMAN', 'batsman');\n\nexport const inningsOver = actionCreator('INNINGS_OVER');\n\nexport const declareWinner =  actionCreator('DECLARE_WINNER', 'winningTeam');\n\nexport const declareTie =  actionCreator('DECLARE_TIE');\n\nexport const changeBowler = actionCreator('CHANGE_BOWLER', 'bowlingTeam', 'currentBowler');\n\nexport const setNewBowler = actionCreator('SET_NEW_BOWLER', 'bowler');\n","import {\n    overComplete, updateTeamScore, updateNoOfBalls,\n    updateOverDetails, changeStriker, recordWicket, inningsOver, declareWinner, declareTie, changeBowler\n} from \"../actions/actions\";\n\nfunction getValidNoOfBalls(over) {\n    let count = 0;\n    over.forEach(ball => {\n        if (isValidDelivery(ball.isExtra, ball.extraType)) {\n            count++;\n        }\n    })\n\n    return count;\n}\n\nfunction isValidDelivery(isExtra, extraType) {\n    return !isExtra || (isExtra && (extraType === 'Lb' || extraType === 'B'));\n}\n\n\nexport function recordRunThunk(runs, isExtra, extraType, isOut) {\n    return function (dispatch, getState) {\n        const updatedState = getState(),\n            currentTeam = { ...updatedState.team[updatedState.game.currentBattingTeam] },\n            currentBattingTeamName = updatedState.game.currentBattingTeam,\n            currentBowlingTeamName = updatedState.game.currentBowlingTeam,\n            previousBattingTeamName = updatedState.game.previousBattingTeam,\n            batsman = updatedState.game.currentBatsmen.filter(batsman => batsman.isStriker)[0].name,\n            bowler = updatedState.game.currentBowler,\n            extraRuns = isExtra && (extraType === 'N' || extraType === 'W') ? 1 : 0,\n            run = runs ? parseInt(runs, 10) : 0,\n            totalWickets = updatedState.game.noOfWickets;\n\n        let currentOver = currentTeam.overs.length - 1,\n            noOfValidBalls = currentTeam.overs[currentOver].length > 0 ? getValidNoOfBalls(currentTeam.overs[currentOver]) : 0;\n\n        const totalRuns = run + extraRuns;\n\n        dispatch(updateTeamScore(currentBattingTeamName, totalRuns));\n\n        if (isValidDelivery(isExtra, extraType)) {\n            dispatch(updateNoOfBalls(currentBattingTeamName));\n            noOfValidBalls += 1;\n        }\n\n        const deliveryData = {\n            batsman: batsman,\n            bowler: bowler,\n            isExtra: isExtra,\n            isOut: isOut,\n            extraRuns: extraRuns,\n            runs: run,\n            extraType: extraType\n        };\n\n        dispatch(updateOverDetails(currentBattingTeamName, deliveryData, currentOver));\n\n        if (previousBattingTeamName) {\n            const previousBattingTeam = updatedState.team[previousBattingTeamName];\n            const teamHasWon = previousBattingTeam.totalScore < (currentTeam.totalScore + totalRuns);\n            if (teamHasWon) {\n                dispatch(declareWinner(currentBattingTeamName));\n                return;\n            }\n        }\n\n        if (runs % 2 > 0) {\n            dispatch(changeStriker());\n        }\n\n        if (noOfValidBalls === 6) {\n            if (currentTeam.overs.length === updatedState.game.noOfOvers) {\n                if (previousBattingTeamName) {\n                    checkForWinner(currentTeam, updatedState, currentBattingTeamName, previousBattingTeamName, dispatch, totalRuns);\n                    return;\n                } else {\n                    dispatch(inningsOver());\n                }\n            } else {\n                dispatch(overComplete(currentBattingTeamName));\n                dispatch(changeStriker());\n                dispatch(changeBowler(currentBowlingTeamName, bowler));\n            }\n        }\n\n        if (isOut) {\n            if (currentTeam.wickets + 1 === totalWickets) {\n                if (previousBattingTeamName) {\n                    checkForWinner(currentTeam, updatedState, currentBattingTeamName, previousBattingTeamName, dispatch, totalRuns);\n                    return;\n                } else {\n                    dispatch(inningsOver())\n                }\n            } else {\n                dispatch(recordWicket(currentBattingTeamName, batsman));\n            }\n        }\n    }\n\n    function checkForWinner(currentTeam, updatedState, currentBattingTeamName, previousBattingTeamName, dispatch, totalRuns) {\n        if ((currentTeam.totalScore + totalRuns) === updatedState.team[previousBattingTeamName].totalScore) {\n            dispatch(declareTie());\n        }\n        else {\n            let winner = (currentTeam.totalScore + totalRuns) > updatedState.team[previousBattingTeamName].totalScore\n                ? currentBattingTeamName : previousBattingTeamName;\n            dispatch(declareWinner(winner));\n        }\n    }\n}\n","import { connect } from 'react-redux';\nimport Score from '../components/scoreentry/Score';\nimport { recordRunThunk } from '../middleware/helper';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        recordRuns(runs, isExtra, extraType, isOut) {\n            dispatch(recordRunThunk(runs, isExtra, extraType, isOut))\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Score);","import React from 'react';\nimport propTypes from 'prop-types';\nimport '../../styles/currentStrikers.css';\n\n\nfunction getStrikers(strikers) {\n    return strikers.map((striker, index) => {\n        const classValue = striker.isStriker ? 'btn btn-success' : 'btn btn-secondary';\n        return <div key={index} className={classValue}>{striker.name}</div>\n    })\n}\n\nfunction CurrentStrikers(props) {\n    return (\n            <div className=\"current-striker-container\">\n                <div>\n                    <span>This Ball</span>\n                </div>\n                <div className=\"current-striker-btn-container\">\n                    {getStrikers(props.strikers)}\n                </div>\n            </div>\n    )\n}\n\nexport default CurrentStrikers;\n\nCurrentStrikers.propTypes = {\n    strikers: propTypes.array\n}","import { connect } from 'react-redux';\nimport CurrentStrikers from '../components/scoreentry/CurrentStrikers';\n\n\nconst mapStateToProps = (state) => ({\n    strikers : state.game.currentBatsmen\n});\n\nexport default connect(mapStateToProps)(CurrentStrikers);","import React from \"react\";\n\nimport Modal from \"react-responsive-modal\";\nimport '../styles/popup.css';\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nclass Popup extends React.Component {\n  isNewBatsman = false;\n  isNewBowler = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      displaySelectedPlayer: false,\n      batsmen: [],\n      bowlers: [],\n      selectedBatsman: \"\",\n      selectedBowler: \"\"\n    };\n  }\n\n  componentWillReceiveProps(newProps, oldProps) {\n    let batsmen,\n      bowlers,\n      availableBatsmen = [],\n      availableBowlers = [];\n\n    if (newProps.wickets > this.props.wickets) {\n      this.isNewBatsman = true;\n      batsmen = { ...newProps.bastmen };\n    }\n\n    if (newProps.overs > this.props.overs) {\n      this.isNewBowler = true;\n      bowlers = { ...newProps.bowlers }\n    }\n\n    for (let player in batsmen) {\n      if (batsmen[player].isAvaialbleForBatting) {\n        availableBatsmen.push(player);\n      }\n    }\n\n    for (let player in bowlers) {\n      if (bowlers[player].isAvaialbleForBowling) {\n        availableBowlers.push(player);\n      }\n    }\n\n    if (availableBowlers.length > 0 || availableBatsmen.length > 0) {\n      this.setState({\n        batsmen: availableBatsmen,\n        bowlers: availableBowlers,\n        open: true,\n        selectedBatsman: availableBatsmen && availableBatsmen[0],\n        selectedBowler: availableBowlers && availableBowlers[0],\n      })\n    }\n\n  }\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n  onBatsmanSelect = () => {\n    this.setState({ displaySelectedPlayer: true });\n  };\n\n  setNewPlayer = () => {\n    if (this.isNewBatsman && this.isNewBowler) {\n      this.props.setBatsman(this.state.selectedBatsman);\n      this.props.setBowler(this.state.selectedBowler);\n    } else if (this.isNewBowler) {\n      this.props.setBowler(this.state.selectedBowler);\n    } else if (this.isNewBatsman) {\n      this.props.setBatsman(this.state.selectedBatsman);\n    }\n\n    this.isNewBatsman = false;\n    this.isNewBowler = false;\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div >\n        <Modal className=\"modal-dialog\" closeOnEsc={false} closeOnOverlayClick={false} showCloseIcon={false} open={open} onClose={this.onCloseModal} center>\n          \n          <div className={(this.isNewBatsman ? 'show' : 'hide')}>\n            <h6 style={styles}>{this.isNewBatsman && 'Select Batsman'}</h6>\n            <div className='row'>\n              <select className=\"form-control col-sm-12\"\n                value={this.state.selectedBatsman}\n                onChange={\n                  (e) => this.setState({\n                    selectedBatsman: e.target.value, validationError: e.target.value === \"\" ?\n                      \"You must select your favourite team\" : \"\"\n                  })}>\n                {this.state.batsmen.map((player) => <option key={player} value={player}>{player}</option>)}\n              </select>\n            </div>\n            <br />  \n          </div>\n\n          <div className={(this.isNewBowler ? 'show' : 'hide')}>\n            <h6 style={styles}>{this.isNewBowler && 'Select Bowler'}</h6>\n            <div className='row '>\n              <select className=\"form-control col-sm-12\"\n                value={this.state.selectedBowler}\n                onChange={\n                  (e) => this.setState({\n                    selectedBowler: e.target.value, validationError: e.target.value === \"\" ?\n                      \"You must select your favourite team\" : \"\"\n                  })}>\n                {this.state.bowlers.map((player) => <option key={player} value={player}>{player}</option>)}\n              </select>\n            </div>\n\n            <br />\n          </div>\n\n          <div className=\"text-center\">\n            <button onClick={this.setNewPlayer} className=\"btn btn-success\">Submit</button>\n          </div>\n\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","import { connect } from 'react-redux';\nimport Popup from '../components/Popup';\nimport { setNewBatsman, setNewBowler } from '../actions/actions';\n\nconst mapStateToProps = (state) => ({\n    bastmen: state.team[state.game.currentBattingTeam].players,\n    wickets: state.team[state.game.currentBattingTeam].wickets,\n    overs: state.team[state.game.currentBattingTeam].overs.length,\n    bowlers: state.team[state.game.currentBowlingTeam].players\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setBatsman(playerName) {\n            dispatch(setNewBatsman(playerName));\n        },\n        setBowler(playerName) {\n            dispatch(setNewBowler(playerName));\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popup);","import React from 'react';\nimport TeamScoreContainer from '../../containers/TeamScoreContainer';\nimport CurrentOverDetails from '../../containers/CurrentOverDetails';\nimport { Link } from 'react-router-dom'\nimport ScoreContainer from '../../containers/ScoreContainer';\nimport CurrentStrikers from '../../containers/CurrentStrikers';\nimport '../../styles/scoreInputPage.css';\nimport Popup from '../../containers/Popup'\nexport default class ScoreInputPage extends React.Component {\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <TeamScoreContainer/>\n        <CurrentOverDetails />\n        <CurrentStrikers/>\n        <ScoreContainer />\n        <div className=\"scoreboard-link-container\">\n          <Link to=\"/scoreboard\">Scoreboard</Link>\n        </div>\n        <Popup/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Scoreboard from './scoreboard/Scoreboard.js';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport ScoreInputPage from './scoreentry/ScoreInputPage.js';\n\nexport default class CricketRouter extends React.Component {\n    render() {\n        return (\n            <Router basename=\"/cricket/\">\n                <div>\n                    <Route path=\"/\" exact component={ScoreInputPage} />\n                    <Route path=\"/scoreboard\" component={Scoreboard} />\n                </div>\n            </Router>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CricketRouter from './components/router';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <CricketRouter />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import swal from 'sweetalert';\n\nconst initialState = {\n    currentBattingTeam: 'India',\n    previousBattingTeam: null,\n    currentBowlingTeam: 'Australia',\n    currentBatsmen: [\n        { name: 'Sehwag', isStriker: true },\n        { name: 'Sachin', isStriker: false }\n    ],\n    currentBowler: 'McGrath',\n    noOfOvers: 5,\n    noOfWickets: 5\n};\n\nconst resetState = {\n    currentBattingTeam: 'India',\n    previousBattingTeam: null,\n    currentBowlingTeam: 'Australia',\n    currentBatsmen: [\n        { name: 'Sehwag', isStriker: true },\n        { name: 'Sachin', isStriker: false }\n    ],\n    currentBowler: 'McGrath',\n    noOfOvers: 5,\n    noOfWickets: 5\n};\n\nconst game = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CHANGE_STRIKER':\n            return {\n                ...state,\n                currentBatsmen: state.currentBatsmen.map(batsman => {\n                    return {\n                        ...batsman,\n                        isStriker: !batsman.isStriker\n                    }\n                })\n            }\n        case 'SET_NEW_BATSMAN':\n            return {\n                ...state,\n                currentBatsmen: state.currentBatsmen.map(batsman => {\n                    if (batsman.isStriker) {\n                        batsman.name = action.batsman;\n                    }\n                    return batsman;\n                })\n            }\n        case 'SET_NEW_BOWLER':\n            return {\n                ...state,\n                currentBowler: action.bowler\n            }\n        case 'INNINGS_OVER':\n            swal({\n                text: \"First inning is over!!!!!!!!!!!!\",\n                icon: \"success\",\n                closeOnClickOutside: false,\n                button: \"Start new inning\",\n            });\n            return {\n                ...state,\n                currentBattingTeam: 'Australia',\n                previousBattingTeam: 'India',\n                currentBowlingTeam: 'India',\n                currentBowler: 'Khan',\n                currentBatsmen: [\n                    { name: 'Gilchrist', isStriker: true },\n                    { name: 'Hayden', isStriker: false }\n                ]\n            }\n        case 'DECLARE_WINNER':\n            swal({\n                text: 'Congratulations, ' + action.winningTeam + \". You have won this match.\",\n                icon: \"success\",\n                closeOnClickOutside: false,\n                button: \"Start new game\",\n            });\n            return resetState;\n\n        case 'DECLARE_TIE':\n            swal({\n                text: \"The game is a draw.\",\n                icon: \"success\",\n                closeOnClickOutside: false,\n                button: \"Start new game\",\n            });\n            return resetState;\n\n\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default game;","const initialState = {\n    India: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Sehwag: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Sachin: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Kohli: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Dhoni: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Singh: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Khan: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    },\n    Australia: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Hayden: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: false\n            },\n            Gilchrist: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Ponting: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Clark: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            McGrath: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Warne: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    }\n};\n\nconst resetState = {\n    India: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Sehwag: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Sachin: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Kohli: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Dhoni: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Singh: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Khan: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    },\n    Australia: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Hayden: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: false\n            },\n            Gilchrist: {\n                isAvaialbleForBatting: false,\n                isAvaialbleForBowling: true\n            },\n            Ponting: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Clark: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            McGrath: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Warne: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    }\n};\n\n\nconst team = (state = initialState, action) => {\n    const updatedState = { ...state };\n\n    switch (action.type) {\n        case 'UPDATE_TEAM_SCORE':\n            updatedState[action.teamName].totalScore += action.totalRuns;\n            return updatedState;\n        case 'UPDATE_NO_OF_BALLS':\n            updatedState[action.teamName].noOfBalls += 1;\n            return updatedState;\n        case 'UPDATE_OVER_DETAILS':\n            updatedState[action.teamName].overs[action.currentOver].push(action.deliveryData);\n            return updatedState;\n        case 'OVER_COMPLETE':\n            updatedState[action.teamName].overs.push([]);\n            return updatedState;\n        case 'UPDATE_WICKET':\n            updatedState[action.teamName].players[action.batsman].isAvaialbleForBatting = false;\n            updatedState[action.teamName].wickets += 1;\n            return updatedState;\n        case 'CHANGE_BOWLER':\n            Object.keys(updatedState[action.bowlingTeam].players).forEach(function(key){ updatedState[action.bowlingTeam].players[key]['isAvaialbleForBowling'] = true });\n            updatedState[action.bowlingTeam].players[action.currentBowler].isAvaialbleForBowling = false;\n            return updatedState;\n        case 'DECLARE_TIE':  \n        case 'DECLARE_WINNER':\n            return resetState;\n        default:\n            break;\n    }\n    return updatedState;\n};\n\nexport default team;","import { combineReducers } from 'redux';\nimport game from './game';\nimport team from './team';\n\nconst rootReducer = combineReducers({\n    game,\n    team\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from \"redux-thunk\";\n\n\nconst store = createStore(rootReducer, {},  compose(\n    applyMiddleware(thunk),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\n    ));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}