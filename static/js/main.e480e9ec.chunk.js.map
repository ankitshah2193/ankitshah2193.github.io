{"version":3,"sources":["components/scoreentry/TeamScore.jsx","containers/TeamScoreContainer.js","components/scoreboard/StatsTable.jsx","containers/BattingTableContainer.js","containers/BowlingTableContainer.js","components/scoreboard/Scoreboard.js","components/scoreentry/CurrentOverDetails.jsx","containers/CurrentOverDetails.js","components/scoreentry/Score.jsx","actions/actionCreator.js","actions/actions.js","middleware/helper.js","containers/ScoreContainer.js","components/scoreentry/CurrentStrikers.jsx","containers/CurrentStrikers.js","components/scoreentry/ScoreInputPage.js","components/router.js","App.js","serviceWorker.js","reducers/game.js","reducers/team.js","reducers/rootReducer.js","index.js"],"names":["TeamScore","props","react_default","a","createElement","className","currentBattingTeam","currentBattingTeamScore","currentTeamWickets","currentTeamOver","totalOvers","previousBattingTeam","previousBattingTeamScore","previousBattingTeamWickets","previousTeamOvers","getPreviousTeamScoreTemplate","getCurrentOver","balls","Math","floor","connect","state","game","team","noOfBalls","totalScore","wickets","noOfOvers","StatsTable","this","stats","filter","stat","length","map","value","index","rowDetails","statValue","statIndex","key","headers","tableName","getTableHeaders","getTableStats","React","Component","getPlayerBattingStats","currentPlayerList","players","battingIndex","overs","batsmenIndex","over","i","ball","j","hasOwnProperty","batsman","runs","fours","sixes","extraType","isOut","createBattingStatsIndex","Object","keys","playerName","undefined","toFixed","getPlayerBowlingStats","bowlingIndex","runsInOver","bowler","maidens","extras","extraRuns","isExtra","isLegitball","createBowlingStatsIndex","parseInt","Scoreboard","TeamScoreContainer","BattingTableContainer","BowlingTableContainer","Link","to","CurrentOverDetails","currentOverDetails","currentBowler","info","join","getLastOver","Score","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRunDataTemplate","run","toString","onClick","handleRunChange","getExtrasDataTemplate","extra","handleExtraChange","event","target","innerText","setState","handleOutChange","handleNextBallEvent","_this$state","recordRuns","Fragment","actionCreator","type","_len","arguments","argNames","Array","_key","_len2","args","_key2","action","forEach","arg","overComplete","updateTeamScore","updateNoOfBalls","updateOverDetails","changeStriker","inningsOver","declareWinner","isValidDelivery","recordRunThunk","dispatch","getState","updatedState","currentTeam","objectSpread","currentBattingTeamName","previousBattingTeamName","currentBatsmen","isStriker","name","currentOver","noOfValidBalls","count","getValidNoOfBalls","totalRuns","CurrentStrikers","strikers","striker","classValue","ScoreInputPage","containers_CurrentOverDetails","containers_CurrentStrikers","ScoreContainer","CricketRouter","BrowserRouter","Route","path","exact","component","App","router_CricketRouter","Boolean","window","location","hostname","match","initialState","currentBowlingTeam","swal","text","icon","closeOnClickOutside","button","winningTeam","Team1","Player1","isAvaialbleForBatting","isAvaialbleForBowling","Player2","Player3","Player4","Player5","Team2","resetState","teamName","push","deliveryData","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e480e9ec.chunk.js","sourcesContent":["import React from 'react'\nimport '../../styles/team-score.css'\n\nfunction getPreviousTeamScoreTemplate(props) {\n    if (props.previousBattingTeam) {\n        return <span> {props.previousBattingTeam} scored {props.previousBattingTeamScore}/{props.previousBattingTeamWickets} in {props.previousTeamOvers} overs </span>;\n    }\n    return <span></span>;\n}\n\nconst TeamScore = (props) => {\n    return (\n        <div>\n            <div className=\"current-team-summary\">\n                <span> {props.currentBattingTeam} </span>\n                <span>{props.currentBattingTeamScore}/{props.currentTeamWickets} in {props.currentTeamOver}/{props.totalOvers}</span>\n            </div>\n\n            <div>\n                <span className=\"previous-team-summary\">{getPreviousTeamScoreTemplate(props)}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TeamScore;\n\n\n","import TeamScore from '../components/scoreentry/TeamScore';\nimport { connect } from 'react-redux';\n\nfunction getCurrentOver(balls) {\n    return (Math.floor(balls / 6)) + '.' + (balls % 6);\n}\n\nconst mapStateToProps = (state) => ({\n    currentBattingTeam: state.game.currentBattingTeam,\n    previousBattingTeam: state.game.previousBattingTeam,\n    currentTeamOver: getCurrentOver(state.team[state.game.currentBattingTeam].noOfBalls),\n    previousTeamOvers: state.team[state.game.previousBattingTeam] && getCurrentOver(state.team[state.game.previousBattingTeam].noOfBalls),\n    currentBattingTeamScore: state.team[state.game.currentBattingTeam].totalScore,\n    previousBattingTeamScore: state.team[state.game.previousBattingTeam] && state.team[state.game.previousBattingTeam].totalScore,\n    currentTeamWickets: state.team[state.game.currentBattingTeam].wickets,\n    totalOvers: state.game.noOfOvers,\n    previousBattingTeamWickets: state.team[state.game.previousBattingTeam] && state.team[state.game.previousBattingTeam].wickets\n});\n\nexport default connect(mapStateToProps)(TeamScore);","import React from 'react';\n\nexport default class StatsTable extends React.Component {\n    getTableStats() {\n        return this.props.stats.filter(stat => stat.length > 0).map((value, index)=>{\n            let rowDetails = value.map((statValue, statIndex)=>{\n                return <td key={statIndex}>{statValue}</td>\n            });\n            return <tr key={index}>{rowDetails}</tr>;\n        });\n    }\n\n    getTableHeaders() {\n        return this.props.headers.map((value, index)=>{\n            return <th key={index}>{value}</th>;\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"panel\">\n                <br/>\n                <div className=\"panel-header\">\n                    <h5>{this.props.tableName}</h5>\n                </div>\n                <div className=\"panel-body\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            {this.getTableHeaders()}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.getTableStats()}\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n}","import {connect} from 'react-redux';\nimport StatsTable from '../components/scoreboard/StatsTable';\n\nfunction createBattingStatsIndex(overs) {\n    let batsmenIndex = {};\n    overs.map((over, i)=>{\n        return over.map((ball, j)=>{\n            if (!batsmenIndex.hasOwnProperty(ball.batsman))\n                batsmenIndex[ball.batsman] = {\n                    runs: 0,\n                    balls: 0,\n                    fours: 0,\n                    sixes: 0\n                }\n            batsmenIndex[ball.batsman].runs += ball.runs;\n            batsmenIndex[ball.batsman].balls += ball.extraType === 'W' ? 0 : 1;\n            batsmenIndex[ball.batsman].fours += ball.runs === 4 ? 1 : 0;\n            batsmenIndex[ball.batsman].sixes += ball.runs === 6 ? 1 : 0;\n            batsmenIndex[ball.batsman].isOut = ball.isOut;\n            return null;\n        })\n    });\n    return batsmenIndex;\n}\n\nfunction getStrikeRate(runs, balls) {\n    if (balls === 0) return 0;\n    return (runs/balls*100).toFixed(2);\n}\n\nfunction getPlayerBattingStats(state) {\n    let currentBattingTeam = state.game.currentBattingTeam;\n    let currentPlayerList = state.team[currentBattingTeam].players;\n    let battingIndex = createBattingStatsIndex(state.team[currentBattingTeam].overs);\n    \n    return Object.keys(currentPlayerList).map((playerName, index)=>{\n        if (battingIndex[playerName] === undefined)\n            return [playerName, 0, 0, 0, 0, 0];\n        return [\n            battingIndex[playerName].isOut ? playerName+'(out)' : playerName,\n            battingIndex[playerName].runs,\n            battingIndex[playerName].balls,\n            battingIndex[playerName].fours,\n            battingIndex[playerName].sixes,\n            getStrikeRate(battingIndex[playerName].runs, battingIndex[playerName].balls)\n        ]\n    })\n}\n\nconst mapStateToProps = state => {\n    return {\n        tableName: \"Batting Table\",\n        stats: getPlayerBattingStats(state),\n        headers: ['Batsman', 'Runs', 'Balls', 'Fours', 'Sixes', 'SR']\n    }\n}\n\nexport default connect(mapStateToProps)(StatsTable);","import StatsTable from '../components/scoreboard/StatsTable'\nimport {connect} from 'react-redux';\n\nfunction isLegitball(ball) {\n    return !ball.isExtra || (ball.isExtra && (ball.extraType === 'B' || ball.extraType === 'Lb')) ? true : false;\n}\n\nfunction createBowlingStatsIndex(overs) {\n    let bowlingIndex = {};\n    overs.map((over, i) => {\n        let runsInOver = 0;\n        over.map((ball, j)=>{\n            if (!bowlingIndex.hasOwnProperty(ball.bowler))\n                bowlingIndex[ball.bowler] = {\n                    balls: 0,\n                    runs: 0,\n                    maidens: 0,\n                    wickets: 0,\n                    extras: 0\n                }\n            bowlingIndex[ball.bowler].runs += ball.runs + ball.extraRuns;\n            bowlingIndex[ball.bowler].balls += isLegitball(ball) ? 1 : 0;\n            bowlingIndex[ball.bowler].wickets += ball.isOut ? 1 : 0;\n            bowlingIndex[ball.bowler].extras += ball.isExtra ? 1 : 0;\n            runsInOver += ball.runs + ball.extraRuns;\n            return ball;\n        });\n        if (over.length !== 0)\n            bowlingIndex[over[0].bowler].maidens += runsInOver === 0 ? 1 : 0;\n        return over;\n    });\n    return bowlingIndex;\n}\n\nfunction computeOvers(balls) {\n    return parseInt(balls/6) + \".\" + balls%6;\n}\n\nfunction getPlayerBowlingStats(state) {\n    let currentBattingTeam = state.game.currentBattingTeam;\n    let currentPlayerList = state.team[currentBattingTeam].players;\n    let bowlingIndex = createBowlingStatsIndex(state.team[currentBattingTeam].overs);\n    \n    return Object.keys(currentPlayerList).map((playerName, index)=>{\n        if (bowlingIndex[playerName] === undefined)\n            return [];\n        return [\n            playerName,\n            computeOvers(bowlingIndex[playerName].balls),\n            bowlingIndex[playerName].maidens,\n            bowlingIndex[playerName].runs,\n            bowlingIndex[playerName].extras,\n            bowlingIndex[playerName].wickets            \n        ]\n    })\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        tableName: \"Bowling Table\",\n        stats: getPlayerBowlingStats(state),\n        headers: ['Bowler', 'Overs', 'Maidens', 'Runs', 'Extras', 'Wickets']\n    }\n}\n\nexport default connect(mapStateToProps)(StatsTable);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport TeamScoreContainer from '../../containers/TeamScoreContainer';\nimport BattingTableContainer from '../../containers/BattingTableContainer';\nimport BowlingTableContainer from '../../containers/BowlingTableContainer';\nimport '../../styles/scoreBoard.css';\n\nexport default class Scoreboard extends React.Component {\n    render() {\n        return (\n            <div className=\"app-container\">\n               \n                <TeamScoreContainer/>\n                <BattingTableContainer />\n                <BowlingTableContainer />\n                <div className=\"scoreentry-link-container\">\n                    <Link to=\"/\">Score Entry</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../styles/currentOverDetails.css';\n\nimport PropTypes from 'prop-types';\n\nclass CurrentOverDetails extends React.Component{\n    \n    render(){\n        return (\n            <div className=\"current-over-container\">\n                <div>\n                    This Over: {this.props.currentOverDetails}\n                </div>\n                <div>\n                    Bowler: {this.props.currentBowler}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nCurrentOverDetails.propTypes = {\n    currentBowler : PropTypes.string,\n    currentOverDetails : PropTypes.string\n}\n\nexport default CurrentOverDetails;\n\n","import {connect} from 'react-redux';\nimport CurrentOverDetails from '../components/scoreentry/CurrentOverDetails';\n\nconst mapStateToProp = state =>{\n    function getLastOver() {\n        let overs = state.team[state.game.currentBattingTeam].overs;\n        return overs.length > 0 ? \n                overs[overs.length - 1]\n                .map(ball => {\n                    let info = '';\n                    \n                    if(ball.runs === 0 && (ball.isExtra || ball.isOut)) {\n                       info = '';\n                    } else {\n                        info += ball.runs;\n                    }\n                   \n                    if(ball.isExtra) {\n                        info += ball.extraType;\n                    } \n                    if(ball.isOut) {\n                        info += 'Out';\n                    }   \n                    return info;\n                })\n                .join('  ') : '';\n    }\n    \n    return {\n        currentBowler: state.game.currentBowler,\n        currentOverDetails: getLastOver()\n    }\n}\n\nexport default connect(mapStateToProp)(CurrentOverDetails);\n","import React from 'react';\nimport '../../styles/score.css';\nimport propTypes from 'prop-types';\n\nclass Score extends React.Component {\n    runs = [0, 1, 2, 3, 4, 6];\n    extras = ['W', 'N', 'B', 'Lb'];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        }\n    }\n\n    getRunDataTemplate = () => {\n        return this.runs.map(run => <button \n                                    key={run} \n                                    className={'score-button btn ' + (this.state.runs === run.toString() ? 'btn-primary' : 'btn-light')}\n                                    onClick={this.handleRunChange}\n                                    >{run}</button>)\n    }\n\n    getExtrasDataTemplate = () => {\n        return this.extras.map(extra => <button \n                                        key={extra} \n                                        className={'score-button btn ' + (this.state.extraType === extra.toString() ? 'btn-primary' : 'btn-light')}\n                                        onClick={this.handleExtraChange}\n                                        >{extra}</button>)\n    }\n\n    handleRunChange = (event) => {\n        const run = event.target.innerText;\n        this.setState({\n            runs: this.state.runs === run ? null : run\n        });\n    }\n\n    handleExtraChange = (event) => {\n        const extra = event.target.innerText;\n        this.setState({\n            extraType: this.state.extraType === extra ? null : extra,\n            isExtra: this.state.extraType === extra ? false : true\n        });\n    }\n\n    handleOutChange = () => {\n        this.setState({\n            isOut: !this.state.isOut\n        });\n    }\n    \n    handleNextBallEvent = () => {\n        const {runs, isExtra, isOut, extraType} = this.state;\n\n        this.setState({\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        });\n\n        this.props.recordRuns(runs, isExtra, extraType, isOut);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"runs-container\">\n                    {this.getRunDataTemplate()}\n                </div>\n\n                 <div className=\"extra-runs-container\">\n                    <span className=\"extra-label\">Extras&nbsp;</span>\n                    {this.getExtrasDataTemplate()}\n                 </div>\n\n                 <div className=\"out-container\">\n                    <button \n                    className={'score-button btn ' + (this.state.isOut ? 'btn-primary' : 'btn-light')}\n                    onClick={this.handleOutChange}\n                    >Out</button>\n                 </div>\n\n                  <div className=\"next-ball-container\">\n                    <button \n                    className={'btn btn-lg ' + (this.state.runs || this.state.isOut || this.state.isExtra ? 'btn-danger' : 'btn-secondary disabled')}\n                    onClick={this.handleNextBallEvent}\n                    >Next Ball</button>\n                 </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Score;\n\nScore.propTypes = {\n    recordRuns: propTypes.func\n}","export default function actionCreator(type, ...argNames) {\n    return function(...args) {\n      let action = { type };\n      argNames.forEach((arg, index) => {\n        action[argNames[index]] = args[index];\n      });\n      return action;\n    };\n  }","import actionCreator from \"./actionCreator\";\n\nexport const overComplete = actionCreator('OVER_COMPLETE', 'teamName');\n\nexport const updateTeamScore = actionCreator('UPDATE_TEAM_SCORE', 'teamName', 'totalRuns');\n\nexport const updateNoOfBalls = actionCreator('UPDATE_NO_OF_BALLS', 'teamName');\n\nexport const updateOverDetails = actionCreator('UPDATE_OVER_DETAILS', 'teamName', 'deliveryData', 'currentOver');\n\nexport const changeStriker = actionCreator('CHANGE_STRIKER');\n\nexport const inningsOver = actionCreator('INNINGS_OVER');\n\nexport const declareWinner =  actionCreator('DECLARE_WINNER', 'winningTeam');\n","import { overComplete, updateTeamScore, updateNoOfBalls, updateOverDetails, changeStriker, inningsOver, declareWinner } from \"../actions/actions\";\n\nfunction getValidNoOfBalls(over) {\n    let count = 0;\n    over.forEach(ball => {\n        if (isValidDelivery(ball.isExtra, ball.extraType)) {\n            count++;\n        }\n    })\n\n    return count;\n}\n\nfunction isValidDelivery(isExtra, extraType) {\n    return !isExtra || (isExtra && (extraType === 'Lb' || extraType === 'B'));\n}\n\n\nexport function recordRunThunk(runs, isExtra, extraType, isOut) {\n    return function (dispatch, getState) {\n        const updatedState = getState(), \n            currentTeam = {...updatedState.team[updatedState.game.currentBattingTeam]},\n            currentBattingTeamName = updatedState.game.currentBattingTeam,\n            previousBattingTeamName = updatedState.game.previousBattingTeam,\n            batsman = updatedState.game.currentBatsmen.filter(batsman => batsman.isStriker)[0].name,\n            bowler = updatedState.game.currentBowler,\n            extraRuns = isExtra ? 1 : 0,\n            run = runs ? parseInt(runs, 10) : 0;\n\n\n        let currentOver = currentTeam.overs.length - 1,\n            noOfValidBalls =  currentTeam.overs[currentOver].length > 0 ? getValidNoOfBalls(currentTeam.overs[currentOver]) : 0;\n\n        const totalRuns = run + extraRuns;\n\n        dispatch(updateTeamScore(currentBattingTeamName, totalRuns));\n\n        if (isValidDelivery(isExtra, extraType)) {\n            dispatch(updateNoOfBalls(currentBattingTeamName));\n            noOfValidBalls += 1;\n        }\n\n        const deliveryData = {\n            batsman: batsman,\n            bowler: bowler,\n            isExtra: isExtra,\n            isOut: isOut,\n            extraRuns: extraRuns,\n            runs: run,\n            extraType: extraType\n        };\n\n        dispatch(updateOverDetails(currentBattingTeamName, deliveryData, currentOver));\n\n        if(previousBattingTeamName) {\n            const previousBattingTeam = updatedState.team[previousBattingTeamName];\n            const teamHasWon = previousBattingTeam.totalScore < (currentTeam.totalScore + totalRuns);\n            if(teamHasWon) {\n                dispatch(declareWinner(currentBattingTeamName));\n                return;\n            }\n        } \n\n        if(runs % 2 > 0) {\n            dispatch(changeStriker());\n        }\n\n        if (noOfValidBalls === 6) {\n            if(currentTeam.overs.length === updatedState.game.noOfOvers) {\n                dispatch(inningsOver());\n            } else {\n                dispatch(overComplete(currentBattingTeamName));\n                dispatch(changeStriker());\n            }\n        }\n    }\n}\n","import { connect } from 'react-redux';\nimport Score from '../components/scoreentry/Score';\nimport { recordRunThunk } from '../middleware/helper';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        recordRuns(runs, isExtra, extraType, isOut) {\n            dispatch(recordRunThunk(runs, isExtra, extraType, isOut))\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Score);","import React from 'react';\nimport propTypes from 'prop-types';\nimport '../../styles/currentStrikers.css';\n\n\nfunction getStrikers(strikers) {\n    return strikers.map((striker, index) => {\n        const classValue = striker.isStriker ? 'btn btn-success' : 'btn btn-secondary';\n        return <div key={index} className={classValue}>{striker.name}</div>\n    })\n}\n\nfunction CurrentStrikers(props) {\n    return (\n            <div className=\"current-striker-container\">\n                <div>\n                    <span>This Ball</span>\n                </div>\n                <div className=\"current-striker-btn-container\">\n                    {getStrikers(props.strikers)}\n                </div>\n            </div>\n    )\n}\n\nexport default CurrentStrikers;\n\nCurrentStrikers.propTypes = {\n    strikers: propTypes.array\n}","import { connect } from 'react-redux';\nimport CurrentStrikers from '../components/scoreentry/CurrentStrikers';\n\n\nconst mapStateToProps = (state) => ({\n    strikers : state.game.currentBatsmen\n});\n\nexport default connect(mapStateToProps)(CurrentStrikers);","import React from 'react';\nimport TeamScoreContainer from '../../containers/TeamScoreContainer';\nimport CurrentOverDetails from '../../containers/CurrentOverDetails';\nimport { Link } from 'react-router-dom'\nimport ScoreContainer from '../../containers/ScoreContainer';\nimport CurrentStrikers from '../../containers/CurrentStrikers';\nimport '../../styles/scoreInputPage.css';\n\nexport default class ScoreInputPage extends React.Component {\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <TeamScoreContainer/>\n        <CurrentOverDetails />\n        <CurrentStrikers/>\n        <ScoreContainer />\n        <div className=\"scoreboard-link-container\">\n          <Link to=\"/scoreboard\">Scoreboard</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Scoreboard from './scoreboard/Scoreboard.js';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport ScoreInputPage from './scoreentry/ScoreInputPage.js';\n\nexport default class CricketRouter extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" exact component={ScoreInputPage} />\n                    <Route path=\"/scoreboard\" component={Scoreboard} />\n                </div>\n            </Router>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport CricketRouter from './components/router';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <CricketRouter />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import swal from 'sweetalert';\n\nconst initialState = {\n    currentBattingTeam: 'Team1',\n    previousBattingTeam: null,\n    currentBowlingTeam: 'Team2',\n    currentBatsmen: [\n        { name: 'Player1', isStriker: true },\n        { name: 'Player2', isStriker: false }\n    ],\n    currentBowler: 'Player1',\n    noOfOvers: 5\n};\n\nconst game = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CHANGE_STRIKER':\n            return {\n                ...state,\n                currentBatsmen: state.currentBatsmen.map(batsman => {\n                    return {\n                        ...batsman,\n                        isStriker: !batsman.isStriker\n                    }\n                })\n            }\n        case 'INNINGS_OVER':\n            swal({\n                text: \"First inning is over!!!!!!!!!!!!\",\n                icon: \"success\",\n                closeOnClickOutside: false,\n                button: \"Start new inning\",\n            });\n            return {\n                ...state,\n                currentBattingTeam: 'Team2',\n                previousBattingTeam: 'Team1',\n                currentBowlingTeam: 'Team1'\n            }\n        case 'DECLARE_WINNER':\n            swal({\n                text: 'Congratulations, ' + action.winningTeam + \". You have won this match.\",\n                icon: \"success\",\n                closeOnClickOutside: false,\n                button: \"Start new game\",\n            });\n            return initialState;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default game;","const initialState = {\n    Team1: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    },\n    Team2: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    }\n};\n\nconst resetState = {\n    Team1: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    },\n    Team2: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    }\n};\n\n\nconst team = (state = initialState, action) => {\n    const updatedState = { ...state };\n\n    switch (action.type) {\n        case 'UPDATE_TEAM_SCORE':\n            updatedState[action.teamName].totalScore += action.totalRuns;\n            return updatedState;\n        case 'UPDATE_NO_OF_BALLS':\n            updatedState[action.teamName].noOfBalls += 1;\n            return updatedState;\n        case 'UPDATE_OVER_DETAILS':\n            updatedState[action.teamName].overs[action.currentOver].push(action.deliveryData);\n            return updatedState;\n        case 'OVER_COMPLETE':\n            updatedState[action.teamName].overs.push([]);\n            return updatedState;\n        case 'DECLARE_WINNER':\n            return resetState;\n        default:\n            break;\n    }\n    return updatedState;\n};\n\nexport default team;","import { combineReducers } from 'redux';\nimport game from './game';\nimport team from './team';\n\nconst rootReducer = combineReducers({\n    game,\n    team\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from \"redux-thunk\";\n\n\nconst store = createStore(rootReducer, {},  compose(\n    applyMiddleware(thunk),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\n    ));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}