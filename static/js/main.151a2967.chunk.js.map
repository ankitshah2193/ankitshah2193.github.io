{"version":3,"sources":["components/TeamScore.jsx","containers/TeamScoreContainer.js","components/Score.jsx","actions/actionCreator.js","actions/actions.js","middleware/helper.js","containers/ScoreContainer.js","components/CurrentOverDetails.jsx","containers/CurrentOverDetails.js","App.js","serviceWorker.js","reducers/game.js","reducers/team.js","reducers/rootReducer.js","index.js"],"names":["TeamScore","props","react_default","a","createElement","className","currentBattingTeam","currentBattingTeamScore","currentTeamWickets","currentTeamOver","totalOvers","previousBattingTeam","previousBattingTeamScore","teamWickets","previousTeamOvers","getPreviousTeamScoreTemplate","getCurrentOver","balls","Math","floor","connect","state","game","team","noOfBalls","totalScore","wickets","noOfOvers","Score","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","runs","extras","getRunDataTemplate","map","run","key","toString","onClick","handleRunChange","getExtrasDataTemplate","extra","extraType","handleExtraChange","event","target","innerText","setState","isExtra","handleOutChange","isOut","handleNextBallEvent","_this$state","recordRuns","Fragment","React","Component","actionCreator","type","_len","arguments","length","argNames","Array","_key","_len2","args","_key2","action","forEach","arg","index","overComplete","updateTeamScore","updateNoOfBalls","updateOverDetails","isValidDelivery","recordRunThunk","dispatch","getState","updatedState","currentTeam","currentBattingTeamName","batsman","currentBatsmen","filter","isStriker","name","bowler","currentBowler","extraRuns","parseInt","currentOver","overs","noOfValidBalls","over","count","ball","getValidNoOfBalls","CurrentOverDetails","currentOverDetails","info","join","getLastOver","App","TeamScoreContainer","containers_CurrentOverDetails","ScoreContainer","Boolean","window","location","hostname","match","initialState","currentBowlingTeam","undefined","Team1","players","Player1","isAvaialbleForBatting","isAvaialbleForBowling","Player2","Player3","Player4","Player5","Team2","objectSpread","teamName","totalRuns","push","deliveryData","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oTAUA,IAeeA,EAfG,SAACC,GACf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,gBAAQH,EAAMK,mBAAd,KACAJ,EAAAC,EAAAC,cAAA,YAAOH,EAAMM,wBAAb,IAAuCN,EAAMO,mBAA7C,OAAqEP,EAAMQ,gBAA3E,IAA6FR,EAAMS,aAGvGR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAhBhC,SAAsCJ,GAClC,OAAIA,EAAMU,oBACCT,EAAAC,EAAAC,cAAA,gBAAQH,EAAMU,oBAAd,WAA2CV,EAAMW,yBAAjD,IAA4EX,EAAMY,YAAlF,OAAmGZ,EAAMa,kBAAzG,WAEJZ,EAAAC,EAAAC,cAAA,aAY8CW,CAA6Bd,cChBtF,SAASe,EAAeC,GACpB,OAAQC,KAAKC,MAAMF,EAAQ,GAAM,IAAOA,EAAQ,EAGpD,IAWeG,cAXS,SAACC,GAAD,MAAY,CAChCf,mBAAoBe,EAAMC,KAAKhB,mBAC/BK,oBAAqBU,EAAMC,KAAKX,oBAChCF,gBAAiBO,EAAeK,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBkB,WAC1EV,kBAAmBO,EAAME,KAAKF,EAAMC,KAAKX,sBAAwBK,EAAeK,EAAME,KAAKF,EAAMC,KAAKX,qBAAqBa,WAC3HjB,wBAAyBc,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBmB,WACnEb,yBAA0BS,EAAME,KAAKF,EAAMC,KAAKX,sBAAwBU,EAAME,KAAKF,EAAMC,KAAKX,qBAAqBc,WACnHjB,mBAAoBa,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoBoB,QAC9DhB,WAAYW,EAAMC,KAAKK,YAGZP,CAAyBpB,GCiFzB4B,qBA3FX,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM/B,KAJVmC,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAGJP,EAFnBQ,OAAS,CAAC,IAAK,IAAK,IAAK,MAENR,EAUnBS,mBAAqB,WACjB,OAAOT,EAAKO,KAAKG,IAAI,SAAAC,GAAG,OAAItC,EAAAC,EAAAC,cAAA,UACAqC,IAAKD,EACLnC,UAAW,qBAAuBwB,EAAKR,MAAMe,OAASI,EAAIE,WAAa,cAAgB,aACvFC,QAASd,EAAKe,iBACZJ,MAffX,EAkBnBgB,sBAAwB,WACpB,OAAOhB,EAAKQ,OAAOE,IAAI,SAAAO,GAAK,OAAI5C,EAAAC,EAAAC,cAAA,UACAqC,IAAKK,EACLzC,UAAW,qBAAuBwB,EAAKR,MAAM0B,YAAcD,EAAMJ,WAAa,cAAgB,aAC9FC,QAASd,EAAKmB,mBACZF,MAvBnBjB,EA0BnBe,gBAAkB,SAACK,GACf,IAAMT,EAAMS,EAAMC,OAAOC,UACzBtB,EAAKuB,SAAS,CACVhB,KAAMP,EAAKR,MAAMe,OAASI,EAAM,KAAOA,KA7B5BX,EAiCnBmB,kBAAoB,SAACC,GACjB,IAAMH,EAAQG,EAAMC,OAAOC,UAC3BtB,EAAKuB,SAAS,CACVL,UAAWlB,EAAKR,MAAM0B,YAAcD,EAAQ,KAAOA,EACnDO,QAASxB,EAAKR,MAAM0B,YAAcD,KArCvBjB,EAyCnByB,gBAAkB,WACdzB,EAAKuB,SAAS,CACVG,OAAQ1B,EAAKR,MAAMkC,SA3CR1B,EA+CnB2B,oBAAsB,WAAM,IAAAC,EACkB5B,EAAKR,MAAxCe,EADiBqB,EACjBrB,KAAMiB,EADWI,EACXJ,QAASE,EADEE,EACFF,MAAOR,EADLU,EACKV,UAE7BlB,EAAKuB,SAAS,CACVhB,KAAM,KACNiB,SAAS,EACTE,OAAO,EACPR,UAAW,OAGflB,EAAK5B,MAAMyD,WAAWtB,EAAMiB,EAASN,EAAWQ,IAvDhD1B,EAAKR,MAAQ,CACTe,KAAM,KACNiB,SAAS,EACTE,OAAO,EACPR,UAAW,MANAlB,wEA6Df,OACI3B,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV2B,KAAKM,sBAGTpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cACC2B,KAAKa,yBAGT3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,UACAC,UAAW,qBAAuB2B,KAAKX,MAAMkC,MAAQ,cAAgB,aACrEZ,QAASX,KAAKsB,iBAFd,QAMFpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACAC,UAAW,eAAiB2B,KAAKX,MAAMe,MAAQJ,KAAKX,MAAMkC,OAASvB,KAAKX,MAAMgC,QAAU,cAAgB,0BACxGV,QAASX,KAAKwB,qBAFd,sBApFAI,IAAMC,YCJX,SAASC,EAAcC,GAAmB,QAAAC,EAAAC,UAAAC,OAAVC,EAAU,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAVF,EAAUE,EAAA,GAAAJ,UAAAI,GACrD,OAAO,WAAkB,QAAAC,EAAAL,UAAAC,OAANK,EAAM,IAAAH,MAAAE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAP,UAAAO,GACvB,IAAIC,EAAS,CAAEV,QAIf,OAHAI,EAASO,QAAQ,SAACC,EAAKC,GACrBH,EAAON,EAASS,IAAUL,EAAKK,KAE1BH,GCJN,IAAMI,EAAef,EAAc,gBAAiB,YAE9CgB,EAAkBhB,EAAc,oBAAqB,WAAY,aAEjEiB,EAAkBjB,EAAc,qBAAsB,YAEtDkB,EAAoBlB,EAAc,sBAAuB,WAAY,eAAgB,eCKlG,SAASmB,EAAgB5B,EAASN,GAC9B,OAAQM,GAAYA,IAA0B,OAAdN,GAAoC,MAAdA,GAInD,SAASmC,EAAe9C,EAAMiB,EAASN,EAAWQ,GACrD,OAAO,SAAU4B,EAAUC,GACvB,IAAMC,EAAeD,IACjBE,EAAcD,EAAa9D,KAAK8D,EAAa/D,KAAKhB,oBAClDiF,EAAyBF,EAAa/D,KAAKhB,mBAC3CkF,EAAUH,EAAa/D,KAAKmE,eAAeC,OAAO,SAAAF,GAAO,OAAIA,EAAQG,YAAW,GAAGC,KACnFC,EAASR,EAAa/D,KAAKwE,cAC3BC,EAAY1C,EAAU,EAAI,EAC1Bb,EAAMJ,EAAO4D,SAAS5D,EAAM,IAAM,EAElC6D,EAAcX,EAAYY,MAAMhC,OAAS,EACzCiC,EAAkBb,EAAYY,MAAMD,GAAa/B,OAAS,EA3BtE,SAA2BkC,GACvB,IAAIC,EAAQ,EAOZ,OANAD,EAAK1B,QAAQ,SAAA4B,GACLrB,EAAgBqB,EAAKjD,QAASiD,EAAKvD,YACnCsD,MAIDA,EAmB+DE,CAAkBjB,EAAYY,MAAMD,IAAgB,EAItHd,EAASL,EAAgBS,EAFP/C,EAAMuD,IAIpBd,EAAgB5B,EAASN,KACzBoC,EAASJ,EAAgBQ,IACzBY,GAAkB,GAatBhB,EAASH,EAAkBO,EAVN,CACjBC,QAASA,EACTK,OAAQA,EACRxC,QAASA,EACTE,MAAOA,EACPwC,UAAWA,EACX3D,KAAMI,EACNO,UAAWA,GAGkDkD,IAE1C,IAAnBE,GACAhB,EAASN,EAAaU,KCjDlC,IAQenE,cAAQ,KARI,SAAC+D,GACxB,MAAO,CACHzB,WADG,SACQtB,EAAMiB,EAASN,EAAWQ,GACjC4B,EAASD,EAAe9C,EAAMiB,EAASN,EAAWQ,OAK/CnC,CAAkCQ,GCgBlC4E,0LAnBP,OACItG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,cACgB2B,KAAK/B,MAAMwG,oBAE3BvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,WACa2B,KAAK/B,MAAM6F,uBATPlC,IAAMC,YC4BxBzC,cA/BQ,SAAAC,GAyBnB,MAAO,CACHyE,cAAezE,EAAMC,KAAKwE,cAC1BW,mBA1BJ,WACI,IAAIP,EAAQ7E,EAAME,KAAKF,EAAMC,KAAKhB,oBAAoB4F,MACtD,OAAOA,EAAMhC,OAAS,EACdgC,EAAMA,EAAMhC,OAAS,GACpB3B,IAAI,SAAA+D,GACD,IAAII,EAAO,GAcX,OAZiB,IAAdJ,EAAKlE,OAAekE,EAAKjD,SAAWiD,EAAK/C,OACzCmD,EAAO,GAENA,GAAQJ,EAAKlE,KAGdkE,EAAKjD,UACJqD,GAAQJ,EAAKvD,WAEduD,EAAK/C,QACJmD,GAAQ,OAELA,IAEVC,KAAK,MAAQ,GAKFC,KAIbxF,CAAwBoF,GChBxBK,mLAVX,OACE3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAAC4G,EAAD,cANUnD,aCMEoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sEClBAC,EAAe,CACjBhH,mBAAqB,QACrBK,oBAAqB,KACrB4G,mBAAqB,QACrB9B,eAAgB,CACZ,CAACG,KAAM,UAAWD,WAAW,GAC7B,CAACC,KAAM,UAAWD,WAAW,IAEjCG,cAAe,UACfnE,UAAW,GAOAL,EAJF,WAAkC,IAAjCD,EAAiC4C,UAAAC,OAAA,QAAAsD,IAAAvD,UAAA,GAAAA,UAAA,GAAzBqD,EAAyBrD,UAAAC,OAAA,GAAAD,UAAA,GAC3C,OAAO5C,WCbLiG,EAAe,CACjBG,MAAO,CACHhG,WAAY,EACZD,UAAW,EACXE,QAAS,EACTgG,QAAS,CACLC,QAAS,CACLC,uBAAuB,EACvBC,uBAAuB,GAE3BC,QAAS,CACLF,uBAAuB,EACvBC,uBAAuB,GAE3BE,QAAS,CACLH,uBAAuB,EACvBC,uBAAuB,GAE3BG,QAAS,CACLJ,uBAAuB,EACvBC,uBAAuB,GAE3BI,QAAS,CACLL,uBAAuB,EACvBC,uBAAuB,IAG/B3B,MAAO,CACH,KAGRgC,MAAO,CACHzG,WAAY,EACZD,UAAW,EACXE,QAAS,EACTgG,QAAS,CACLC,QAAS,CACLC,uBAAuB,EACvBC,uBAAuB,GAE3BC,QAAS,CACLF,uBAAuB,EACvBC,uBAAuB,GAE3BE,QAAS,CACLH,uBAAuB,EACvBC,uBAAuB,GAE3BG,QAAS,CACLJ,uBAAuB,EACvBC,uBAAuB,GAE3BI,QAAS,CACLL,uBAAuB,EACvBC,uBAAuB,IAG/B3B,MAAO,CACH,MA6BG3E,EAtBF,WAAkC,IAAjCF,EAAiC4C,UAAAC,OAAA,QAAAsD,IAAAvD,UAAA,GAAAA,UAAA,GAAzBqD,EAAc7C,EAAWR,UAAAC,OAAA,EAAAD,UAAA,QAAAuD,EACrCnC,EAAYvD,OAAAqG,EAAA,EAAArG,CAAA,GAAQT,GAE1B,OAAQoD,EAAOV,MACX,IAAK,oBAED,OADAsB,EAAaZ,EAAO2D,UAAU3G,YAAcgD,EAAO4D,UAC5ChD,EACX,IAAK,qBAED,OADAA,EAAaZ,EAAO2D,UAAU5G,WAAa,EACpC6D,EACX,IAAK,sBAED,OADAA,EAAaZ,EAAO2D,UAAUlC,MAAMzB,EAAOwB,aAAaqC,KAAK7D,EAAO8D,cAC7DlD,EACX,IAAK,gBAED,OADAA,EAAaZ,EAAO2D,UAAUlC,MAAMoC,KAAK,IAClCjD,EAIf,OAAOA,GC3EImD,EALKC,YAAgB,CAChCnH,OACAC,iBCMEmH,EAAQC,YAAYH,EAAa,GAAKI,YACxCC,YAAgBC,KACf5B,OAAO6B,sCAAwC7B,OAAO6B,wCAA2CH,MAGtGI,IAASC,OACL/I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAUR,MAAOA,GACbxI,EAAAC,EAAAC,cAAC+I,EAAD,OAEHC,SAASC,eAAe,SJ4GvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.151a2967.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/team-score.css'\n\nfunction getPreviousTeamScoreTemplate(props) {\n    if (props.previousBattingTeam) {\n        return <span> {props.previousBattingTeam} scored {props.previousBattingTeamScore}/{props.teamWickets} in {props.previousTeamOvers} overs </span>;\n    }\n    return <span></span>;\n}\n\nconst TeamScore = (props) => {\n    return (\n        <div>\n            <div className=\"current-team-summary\">\n                <span> {props.currentBattingTeam} </span>\n                <span>{props.currentBattingTeamScore}/{props.currentTeamWickets} in {props.currentTeamOver}/{props.totalOvers}</span>\n            </div>\n\n            <div>\n                <span className=\"previous-team-summary\">{getPreviousTeamScoreTemplate(props)}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TeamScore;\n\n\n","import TeamScore from '../components/TeamScore';\nimport { connect } from 'react-redux';\n\nfunction getCurrentOver(balls) {\n    return (Math.floor(balls / 6)) + '.' + (balls % 6);\n}\n\nconst mapStateToProps = (state) => ({\n    currentBattingTeam: state.game.currentBattingTeam,\n    previousBattingTeam: state.game.previousBattingTeam,\n    currentTeamOver: getCurrentOver(state.team[state.game.currentBattingTeam].noOfBalls),\n    previousTeamOvers: state.team[state.game.previousBattingTeam] && getCurrentOver(state.team[state.game.previousBattingTeam].noOfBalls),\n    currentBattingTeamScore: state.team[state.game.currentBattingTeam].totalScore,\n    previousBattingTeamScore: state.team[state.game.previousBattingTeam] && state.team[state.game.previousBattingTeam].totalScore,\n    currentTeamWickets: state.team[state.game.currentBattingTeam].wickets,\n    totalOvers: state.game.noOfOvers\n});\n\nexport default connect(mapStateToProps)(TeamScore);","import React from 'react';\nimport '../styles/score.css';\nimport propTypes from 'prop-types';\n\nclass Score extends React.Component {\n    runs = [0, 1, 2, 3, 4, 6];\n    extras = ['W', 'N', 'B', 'Lb'];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        }\n    }\n\n    getRunDataTemplate = () => {\n        return this.runs.map(run => <button \n                                    key={run} \n                                    className={'score-button btn ' + (this.state.runs === run.toString() ? 'btn-primary' : 'btn-light')}\n                                    onClick={this.handleRunChange}\n                                    >{run}</button>)\n    }\n\n    getExtrasDataTemplate = () => {\n        return this.extras.map(extra => <button \n                                        key={extra} \n                                        className={'score-button btn ' + (this.state.extraType === extra.toString() ? 'btn-primary' : 'btn-light')}\n                                        onClick={this.handleExtraChange}\n                                        >{extra}</button>)\n    }\n\n    handleRunChange = (event) => {\n        const run = event.target.innerText;\n        this.setState({\n            runs: this.state.runs === run ? null : run\n        });\n    }\n\n    handleExtraChange = (event) => {\n        const extra = event.target.innerText;\n        this.setState({\n            extraType: this.state.extraType === extra ? null : extra,\n            isExtra: this.state.extraType === extra ? false : true\n        });\n    }\n\n    handleOutChange = () => {\n        this.setState({\n            isOut: !this.state.isOut\n        });\n    }\n    \n    handleNextBallEvent = () => {\n        const {runs, isExtra, isOut, extraType} = this.state;\n\n        this.setState({\n            runs: null,\n            isExtra: false,\n            isOut: false,\n            extraType: null\n        });\n\n        this.props.recordRuns(runs, isExtra, extraType, isOut);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"runs-container\">\n                    {this.getRunDataTemplate()}\n                </div>\n\n                 <div className=\"extra-runs-container\">\n                    <span className=\"extra-label\">Extras&nbsp;</span>\n                    {this.getExtrasDataTemplate()}\n                 </div>\n\n                 <div className=\"out-container\">\n                    <button \n                    className={'score-button btn ' + (this.state.isOut ? 'btn-primary' : 'btn-light')}\n                    onClick={this.handleOutChange}\n                    >Out</button>\n                 </div>\n\n                  <div className=\"next-ball-container\">\n                    <button \n                    className={'btn btn-lg ' + (this.state.runs || this.state.isOut || this.state.isExtra ? 'btn-success' : 'btn-secondary disabled')}\n                    onClick={this.handleNextBallEvent}\n                    >Next Ball</button>\n                 </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Score;\n\nScore.propTypes = {\n    recordRuns: propTypes.func\n}","export default function actionCreator(type, ...argNames) {\n    return function(...args) {\n      let action = { type };\n      argNames.forEach((arg, index) => {\n        action[argNames[index]] = args[index];\n      });\n      return action;\n    };\n  }","import actionCreator from \"./actionCreator\";\n\nexport const overComplete = actionCreator('OVER_COMPLETE', 'teamName');\n\nexport const updateTeamScore = actionCreator('UPDATE_TEAM_SCORE', 'teamName', 'totalRuns');\n\nexport const updateNoOfBalls = actionCreator('UPDATE_NO_OF_BALLS', 'teamName');\n\nexport const updateOverDetails = actionCreator('UPDATE_OVER_DETAILS', 'teamName', 'deliveryData', 'currentOver');","import { overComplete, updateTeamScore, updateNoOfBalls, updateOverDetails } from \"../actions/actions\";\n\nfunction getValidNoOfBalls(over) {\n    let count = 0;\n    over.forEach(ball => {\n        if (isValidDelivery(ball.isExtra, ball.extraType)) {\n            count++;\n        }\n    })\n\n    return count;\n}\n\nfunction isValidDelivery(isExtra, extraType) {\n    return !isExtra || (isExtra && (extraType === 'Lb' || extraType === 'B'));\n}\n\n\nexport function recordRunThunk(runs, isExtra, extraType, isOut) {\n    return function (dispatch, getState) {\n        const updatedState = getState(), \n            currentTeam = updatedState.team[updatedState.game.currentBattingTeam],\n            currentBattingTeamName = updatedState.game.currentBattingTeam,\n            batsman = updatedState.game.currentBatsmen.filter(batsman => batsman.isStriker)[0].name,\n            bowler = updatedState.game.currentBowler,\n            extraRuns = isExtra ? 1 : 0,\n            run = runs ? parseInt(runs, 10) : 0;\n\n        let currentOver = currentTeam.overs.length - 1,\n            noOfValidBalls =  currentTeam.overs[currentOver].length > 0 ? getValidNoOfBalls(currentTeam.overs[currentOver]) : 0;\n\n        const totalRuns = run + extraRuns;\n\n        dispatch(updateTeamScore(currentBattingTeamName, totalRuns));\n\n        if (isValidDelivery(isExtra, extraType)) {\n            dispatch(updateNoOfBalls(currentBattingTeamName));\n            noOfValidBalls += 1;\n        }\n\n        const deliveryData = {\n            batsman: batsman,\n            bowler: bowler,\n            isExtra: isExtra,\n            isOut: isOut,\n            extraRuns: extraRuns,\n            runs: run,\n            extraType: extraType\n        };\n\n        dispatch(updateOverDetails(currentBattingTeamName, deliveryData, currentOver));\n\n        if (noOfValidBalls === 6) {\n            dispatch(overComplete(currentBattingTeamName));\n        }\n    }\n}\n","import { connect } from 'react-redux';\nimport Score from '../components/Score';\nimport { recordRunThunk } from '../middleware/helper';\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        recordRuns(runs, isExtra, extraType, isOut) {\n            dispatch(recordRunThunk(runs, isExtra, extraType, isOut))\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Score);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/currentOverDetails.css';\n\nimport PropTypes from 'prop-types';\n\nclass CurrentOverDetails extends React.Component{\n    \n    render(){\n        return (\n            <div className=\"row current-over-details\">\n                <div className=\"col-sm-12\">\n                    This Over: {this.props.currentOverDetails}\n                </div>\n                <div className=\"col-sm-12\">\n                    Bowler: {this.props.currentBowler}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nCurrentOverDetails.propTypes = {\n    currentBowler : PropTypes.string,\n    currentOverDetails : PropTypes.string\n}\n\nexport default CurrentOverDetails;\n\n","import {connect} from 'react-redux';\nimport CurrentOverDetails from '../components/CurrentOverDetails';\n\nconst mapStateToProp = state =>{\n    function getLastOver() {\n        let overs = state.team[state.game.currentBattingTeam].overs;\n        return overs.length > 0 ? \n                overs[overs.length - 1]\n                .map(ball => {\n                    let info = '';\n                    \n                    if(ball.runs === 0 && (ball.isExtra || ball.isOut)) {\n                       info = '';\n                    } else {\n                        info += ball.runs;\n                    }\n                   \n                    if(ball.isExtra) {\n                        info += ball.extraType;\n                    } \n                    if(ball.isOut) {\n                        info += 'Out';\n                    }   \n                    return info;\n                })\n                .join('  ') : '';\n    }\n    \n    return {\n        currentBowler: state.game.currentBowler,\n        currentOverDetails: getLastOver()\n    }\n}\n\nexport default connect(mapStateToProp)(CurrentOverDetails);\n","import React, { Component } from 'react';\nimport './App.css';\nimport TeamScoreContainer from './containers/TeamScoreContainer';\nimport ScoreContainer from './containers/ScoreContainer';\nimport CurrentOverDetails from './containers/CurrentOverDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <TeamScoreContainer/>\n        <CurrentOverDetails/>\n        <ScoreContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    currentBattingTeam : 'Team1',\n    previousBattingTeam: null,\n    currentBowlingTeam : 'Team2',\n    currentBatsmen: [\n        {name: 'Player1', isStriker: true},\n        {name: 'Player2', isStriker: false}\n    ],\n    currentBowler: 'Player3',\n    noOfOvers: 5\n};\n\nconst game = (state = initialState, action) => {\n    return state;\n};\n\nexport default game;","const initialState = {\n    Team1: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    },\n    Team2: {\n        totalScore: 0,\n        noOfBalls: 0,\n        wickets: 0,\n        players: {\n            Player1: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player2: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player3: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player4: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            },\n            Player5: {\n                isAvaialbleForBatting: true,\n                isAvaialbleForBowling: true\n            }\n        },\n        overs: [\n            []\n        ]\n    }\n};\n\n\n\nconst team = (state = initialState, action) => {\n    const updatedState = { ...state };\n\n    switch (action.type) {\n        case 'UPDATE_TEAM_SCORE':\n            updatedState[action.teamName].totalScore += action.totalRuns;\n            return updatedState;\n        case 'UPDATE_NO_OF_BALLS':\n            updatedState[action.teamName].noOfBalls += 1;\n            return updatedState;\n        case 'UPDATE_OVER_DETAILS':\n            updatedState[action.teamName].overs[action.currentOver].push(action.deliveryData);\n            return updatedState;\n        case 'OVER_COMPLETE':\n            updatedState[action.teamName].overs.push([]);\n            return updatedState;\n        default:\n            break;\n    }\n    return updatedState;\n};\n\nexport default team;","import { combineReducers } from 'redux';\nimport game from './game';\nimport team from './team';\n\nconst rootReducer = combineReducers({\n    game,\n    team\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from \"redux-thunk\";\n\n\nconst store = createStore(rootReducer, {},  compose(\n    applyMiddleware(thunk),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) || compose\n    ));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n   , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}